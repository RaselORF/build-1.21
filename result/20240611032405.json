[{"fixerCategoryTag":"GoCITC-3","filePath":"/workspace/source/build.go","relatedSourceLocations":null,"className":"null","functionName":"TLSDialer","selectedNode":"tlsConf.InsecureSkipVerify = true","fixNo":"BA-H-2","fixerCategory":"Broken Authentication","fixerCustomHeading":"Validate Certificates Properly","fixerCustomMessage":"In file: \u003cspan class='original_filename'\u003ebuild.go\u003c/span\u003e, function: \u003cspan class='function_name'\u003eTLSDialer\u003c/span\u003e, certificate validation has been turned off while establishing an SSL/TLS connection. According to \u003ca href='https://cwe.mitre.org/data/definitions/295.html' target='_blank'\u003eCWE 295\u003c/a\u003e, if a certificate is invalid or malicious, it might allow an attacker to spoof a trusted entity by interfering in the communication path between the host and client. iCR suggested that the certificate validation option should not be turned off.","fixerCustomMessageText":"In file: build.go, function: TLSDialer, certificate validation has been turned off while establishing an SSL/TLS connection. According to CWE 295, if a certificate is invalid or malicious, it might allow an attacker to spoof a trusted entity by interfering in the communication path between the host and client. iCR suggested that the certificate validation option should not be turned off.","priority":"H","isWarning":"True","projectPath":"/workspace/source","diffLocations":["build.go3826696783.diff"],"scanDate":"Tue Jun 11 03:24:03 UTC 2024"},{"fixerCategoryTag":"GoCITC-3","filePath":"/workspace/source/influx/main.go","relatedSourceLocations":["/workspace/source/influx/main.go"],"className":"null","functionName":"setupAllowed","selectedNode":"tls.Config{InsecureSkipVerify: true}","fixNo":"BA-H-5","fixerCategory":"Broken Authentication","fixerCustomHeading":"Validate Certificates Properly","fixerCustomMessage":"In file: \u003cspan class='original_filename'\u003emain.go\u003c/span\u003e, function: \u003cspan class='function_name'\u003esetupAllowed\u003c/span\u003e, certificate validation has been turned off while establishing an SSL/TLS connection. According to \u003ca href='https://cwe.mitre.org/data/definitions/295.html' target='_blank'\u003eCWE 295\u003c/a\u003e, if a certificate is invalid or malicious, it might allow an attacker to spoof a trusted entity by interfering in the communication path between the host and client. iCR suggested that the certificate validation option should not be turned off.","fixerCustomMessageText":"In file: main.go, function: setupAllowed, certificate validation has been turned off while establishing an SSL/TLS connection. According to CWE 295, if a certificate is invalid or malicious, it might allow an attacker to spoof a trusted entity by interfering in the communication path between the host and client. iCR suggested that the certificate validation option should not be turned off.","priority":"H","isWarning":"True","projectPath":"/workspace/source","diffLocations":["main.go2749126620.diff"],"scanDate":"Tue Jun 11 03:24:04 UTC 2024"},{"fixerCategoryTag":"GoCITC-3","filePath":"/workspace/source/buildlet/keypair.go","relatedSourceLocations":null,"className":"null","functionName":"tlsDialer","selectedNode":"tls.Config{InsecureSkipVerify: true}","fixNo":"BA-H-1","fixerCategory":"Broken Authentication","fixerCustomHeading":"Validate Certificates Properly","fixerCustomMessage":"In file: \u003cspan class='original_filename'\u003ekeypair.go\u003c/span\u003e, function: \u003cspan class='function_name'\u003etlsDialer\u003c/span\u003e, certificate validation has been turned off while establishing an SSL/TLS connection. According to \u003ca href='https://cwe.mitre.org/data/definitions/295.html' target='_blank'\u003eCWE 295\u003c/a\u003e, if a certificate is invalid or malicious, it might allow an attacker to spoof a trusted entity by interfering in the communication path between the host and client. iCR suggested that the certificate validation option should not be turned off.","fixerCustomMessageText":"In file: keypair.go, function: tlsDialer, certificate validation has been turned off while establishing an SSL/TLS connection. According to CWE 295, if a certificate is invalid or malicious, it might allow an attacker to spoof a trusted entity by interfering in the communication path between the host and client. iCR suggested that the certificate validation option should not be turned off.","priority":"H","isWarning":"True","projectPath":"/workspace/source","diffLocations":["keypair.go3004385105.diff"],"scanDate":"Tue Jun 11 03:24:02 UTC 2024"},{"fixerCategoryTag":"GoCITC-3","filePath":"/workspace/source/influx/main.go","relatedSourceLocations":["/workspace/source/influx/main.go"],"className":"null","functionName":"newInfluxClient","selectedNode":"tls.Config{InsecureSkipVerify: true}","fixNo":"BA-H-4","fixerCategory":"Broken Authentication","fixerCustomHeading":"Validate Certificates Properly","fixerCustomMessage":"In file: \u003cspan class='original_filename'\u003emain.go\u003c/span\u003e, function: \u003cspan class='function_name'\u003enewInfluxClient\u003c/span\u003e, certificate validation has been turned off while establishing an SSL/TLS connection. According to \u003ca href='https://cwe.mitre.org/data/definitions/295.html' target='_blank'\u003eCWE 295\u003c/a\u003e, if a certificate is invalid or malicious, it might allow an attacker to spoof a trusted entity by interfering in the communication path between the host and client. iCR suggested that the certificate validation option should not be turned off.","fixerCustomMessageText":"In file: main.go, function: newInfluxClient, certificate validation has been turned off while establishing an SSL/TLS connection. According to CWE 295, if a certificate is invalid or malicious, it might allow an attacker to spoof a trusted entity by interfering in the communication path between the host and client. iCR suggested that the certificate validation option should not be turned off.","priority":"H","isWarning":"True","projectPath":"/workspace/source","diffLocations":["main.go2451449350.diff"],"scanDate":"Tue Jun 11 03:24:04 UTC 2024"},{"fixerCategoryTag":"GoCITC-3","filePath":"/workspace/source/buildlet/buildlet.go","relatedSourceLocations":null,"className":"null","functionName":"probeBuildlet","selectedNode":"tls.Config{\n\tInsecureSkipVerify: true,\n}","fixNo":"BA-H-3","fixerCategory":"Broken Authentication","fixerCustomHeading":"Validate Certificates Properly","fixerCustomMessage":"In file: \u003cspan class='original_filename'\u003ebuildlet.go\u003c/span\u003e, function: \u003cspan class='function_name'\u003eprobeBuildlet\u003c/span\u003e, certificate validation has been turned off while establishing an SSL/TLS connection. According to \u003ca href='https://cwe.mitre.org/data/definitions/295.html' target='_blank'\u003eCWE 295\u003c/a\u003e, if a certificate is invalid or malicious, it might allow an attacker to spoof a trusted entity by interfering in the communication path between the host and client. iCR suggested that the certificate validation option should not be turned off.","fixerCustomMessageText":"In file: buildlet.go, function: probeBuildlet, certificate validation has been turned off while establishing an SSL/TLS connection. According to CWE 295, if a certificate is invalid or malicious, it might allow an attacker to spoof a trusted entity by interfering in the communication path between the host and client. iCR suggested that the certificate validation option should not be turned off.","priority":"H","isWarning":"True","projectPath":"/workspace/source","diffLocations":["buildlet.go2763468668.diff"],"scanDate":"Tue Jun 11 03:24:03 UTC 2024"},{"fixerCategoryTag":"GoFDR-1","filePath":"/workspace/source/cmd/fetchlogs/fetchlogs.go","relatedSourceLocations":["fetchlogs.go"],"className":"null","functionName":"goProject","selectedNode":"cachedGoProject, goProjectErr = getGoProject(context.Background())","fixNo":"CI-H-2","fixerCategory":"Concurrency Issues","fixerCustomHeading":"Avoid Data Race","fixerCustomMessage":"In file: \u003cspan class='original_filename'\u003efetchlogs.go\u003c/span\u003e, there is a function \u003cspan class='function_name'\u003egoProject\u003c/span\u003e which contains an access to a memory location that is also shared in another goroutine. Such accesses should be guarded by proper locking mechanism to prevent potential data races. iCR demonstrated a possible data race. To learn more check \u003ca href='https://cwe.mitre.org/data/definitions/366.html' target='_blank'\u003eCWE-366\u003c/a\u003e.","fixerCustomMessageText":"In file: fetchlogs.go, there is a function goProject which contains an access to a memory location that is also shared in another goroutine. Such accesses should be guarded by proper locking mechanism to prevent potential data races. iCR demonstrated a possible data race. To learn more check CWE-366.","priority":"H","isWarning":"True","projectPath":"/workspace/source","diffLocations":["fetchlogs.go430362608.diff"],"scanDate":"Tue Jun 11 03:24:02 UTC 2024"},{"fixerCategoryTag":"GoFT-15","filePath":"/workspace/source/influx/main.go","relatedSourceLocations":["/workspace/source/influx/main.go"],"className":"null","functionName":"recordOrLog","selectedNode":"log.Printf(\"Reader password: %s\", i.readerPass)","fixNo":"SDE-H-2","fixerCategory":"Sensitive Data Exposure","fixerCustomHeading":"Prevent Sensitive Data Leakage","fixerCustomMessage":"In file: \u003cspan class='original_filename'\u003emain.go\u003c/span\u003e, there is a function \u003cspan class='function_name'\u003erecordOrLog\u003c/span\u003e that is leaking sensitive data through logging. iCR suggested proper sanitization to prevent this sensitive data leakage.","fixerCustomMessageText":"In file: main.go, there is a function recordOrLog that is leaking sensitive data through logging. iCR suggested proper sanitization to prevent this sensitive data leakage.","priority":"H","isWarning":"True","projectPath":"/workspace/source","diffLocations":["main.go3709373169.diff"],"scanDate":"Tue Jun 11 03:24:04 UTC 2024"},{"fixerCategoryTag":"GoFT-15","filePath":"/workspace/source/cmd/genbotcert/genbotcert.go","relatedSourceLocations":["/workspace/source/cmd/genbotcert/genbotcert.go"],"className":"null","functionName":"generateCert","selectedNode":"log.Printf(\"Certificate %s created\", certID)","fixNo":"SDE-H-1","fixerCategory":"Sensitive Data Exposure","fixerCustomHeading":"Prevent Sensitive Data Leakage","fixerCustomMessage":"In file: \u003cspan class='original_filename'\u003egenbotcert.go\u003c/span\u003e, there is a function \u003cspan class='function_name'\u003egenerateCert\u003c/span\u003e that is leaking sensitive data through logging. iCR suggested proper sanitization to prevent this sensitive data leakage.","fixerCustomMessageText":"In file: genbotcert.go, there is a function generateCert that is leaking sensitive data through logging. iCR suggested proper sanitization to prevent this sensitive data leakage.","priority":"H","isWarning":"True","projectPath":"/workspace/source","diffLocations":["genbotcert.go4114817434.diff"],"scanDate":"Tue Jun 11 03:24:04 UTC 2024"},{"fixerCategoryTag":"GoFT-15","filePath":"/workspace/source/influx/main.go","relatedSourceLocations":["/workspace/source/influx/main.go"],"className":"null","functionName":"recordOrLog","selectedNode":"log.Printf(\"Admin password: %s\", i.adminPass)","fixNo":"SDE-H-3","fixerCategory":"Sensitive Data Exposure","fixerCustomHeading":"Prevent Sensitive Data Leakage","fixerCustomMessage":"In file: \u003cspan class='original_filename'\u003emain.go\u003c/span\u003e, there is a function \u003cspan class='function_name'\u003erecordOrLog\u003c/span\u003e that is leaking sensitive data through logging. iCR suggested proper sanitization to prevent this sensitive data leakage.","fixerCustomMessageText":"In file: main.go, there is a function recordOrLog that is leaking sensitive data through logging. iCR suggested proper sanitization to prevent this sensitive data leakage.","priority":"H","isWarning":"True","projectPath":"/workspace/source","diffLocations":["main.go4199889344.diff"],"scanDate":"Tue Jun 11 03:24:04 UTC 2024"},{"fixerCategoryTag":"GoCST-1","filePath":"/workspace/source/perfdata/localperfdata/app.go","relatedSourceLocations":null,"className":"null","functionName":"main","selectedNode":"http.ListenAndServe(*addr, nil)","fixNo":"AUI-M-6","fixerCategory":"API Usage Issues","fixerCustomHeading":"Use Server Timeout","fixerCustomMessage":"In file: \u003cspan class='original_filename'\u003eapp.go\u003c/span\u003e, there is a function \u003cspan class='function_name'\u003emain\u003c/span\u003e that uses the default server. The default server does not use any timeouts. Server timeouts are necessary to expire inactive connections. Without the timeout, a server may wait indefinitely. iCR suggested that a properly configured server with a timeout should be used instead of the default one.","fixerCustomMessageText":"In file: app.go, there is a function main that uses the default server. The default server does not use any timeouts. Server timeouts are necessary to expire inactive connections. Without the timeout, a server may wait indefinitely. iCR suggested that a properly configured server with a timeout should be used instead of the default one.","priority":"M","isWarning":"True","projectPath":"/workspace/source","diffLocations":["app.go3844930233.diff"],"scanDate":"Tue Jun 11 03:24:04 UTC 2024"},{"fixerCategoryTag":"GoCST-1","filePath":"/workspace/source/cmd/buildlet/buildlet.go","relatedSourceLocations":["/workspace/source/cmd/buildlet/buildlet.go"],"className":"null","functionName":"serveReverseHealth","selectedNode":"http.ListenAndServe(*healthAddr, m)","fixNo":"AUI-M-3","fixerCategory":"API Usage Issues","fixerCustomHeading":"Use Server Timeout","fixerCustomMessage":"In file: \u003cspan class='original_filename'\u003ebuildlet.go\u003c/span\u003e, there is a function \u003cspan class='function_name'\u003eserveReverseHealth\u003c/span\u003e that uses the default server. The default server does not use any timeouts. Server timeouts are necessary to expire inactive connections. Without the timeout, a server may wait indefinitely. iCR suggested that a properly configured server with a timeout should be used instead of the default one.","fixerCustomMessageText":"In file: buildlet.go, there is a function serveReverseHealth that uses the default server. The default server does not use any timeouts. Server timeouts are necessary to expire inactive connections. Without the timeout, a server may wait indefinitely. iCR suggested that a properly configured server with a timeout should be used instead of the default one.","priority":"M","isWarning":"True","projectPath":"/workspace/source","diffLocations":["buildlet.go974445260.diff"],"scanDate":"Tue Jun 11 03:24:03 UTC 2024"},{"fixerCategoryTag":"GoCST-1","filePath":"/workspace/source/cmd/gitmirror/gitmirror.go","relatedSourceLocations":["/workspace/source/cmd/gitmirror/gitmirror.go"],"className":"null","functionName":"main","selectedNode":"http.ListenAndServe(*flagHTTPAddr, nil)","fixNo":"AUI-M-5","fixerCategory":"API Usage Issues","fixerCustomHeading":"Use Server Timeout","fixerCustomMessage":"In file: \u003cspan class='original_filename'\u003egitmirror.go\u003c/span\u003e, there is a function \u003cspan class='function_name'\u003emain\u003c/span\u003e that uses the default server. The default server does not use any timeouts. Server timeouts are necessary to expire inactive connections. Without the timeout, a server may wait indefinitely. iCR suggested that a properly configured server with a timeout should be used instead of the default one.","fixerCustomMessageText":"In file: gitmirror.go, there is a function main that uses the default server. The default server does not use any timeouts. Server timeouts are necessary to expire inactive connections. Without the timeout, a server may wait indefinitely. iCR suggested that a properly configured server with a timeout should be used instead of the default one.","priority":"M","isWarning":"True","projectPath":"/workspace/source","diffLocations":["gitmirror.go1093373337.diff"],"scanDate":"Tue Jun 11 03:24:03 UTC 2024"},{"fixerCategoryTag":"GoCST-1","filePath":"/workspace/source/cmd/coordinator/modproxy.go","relatedSourceLocations":null,"className":"null","functionName":"listenAndServeInternalModuleProxy","selectedNode":"http.ListenAndServe(\":8123\", http.HandlerFunc(proxyModuleCache))","fixNo":"AUI-M-1","fixerCategory":"API Usage Issues","fixerCustomHeading":"Use Server Timeout","fixerCustomMessage":"In file: \u003cspan class='original_filename'\u003emodproxy.go\u003c/span\u003e, there is a function \u003cspan class='function_name'\u003elistenAndServeInternalModuleProxy\u003c/span\u003e that uses the default server. The default server does not use any timeouts. Server timeouts are necessary to expire inactive connections. Without the timeout, a server may wait indefinitely. iCR suggested that a properly configured server with a timeout should be used instead of the default one.","fixerCustomMessageText":"In file: modproxy.go, there is a function listenAndServeInternalModuleProxy that uses the default server. The default server does not use any timeouts. Server timeouts are necessary to expire inactive connections. Without the timeout, a server may wait indefinitely. iCR suggested that a properly configured server with a timeout should be used instead of the default one.","priority":"M","isWarning":"True","projectPath":"/workspace/source","diffLocations":["modproxy.go2508216719.diff"],"scanDate":"Tue Jun 11 03:24:02 UTC 2024"},{"fixerCategoryTag":"GoCST-2","filePath":"/workspace/source/cmd/buildlet/buildlet.go","relatedSourceLocations":["/workspace/source/cmd/buildlet/buildlet.go"],"className":"null","functionName":"main","selectedNode":"srv.Serve(ln)","fixNo":"AUI-M-2","fixerCategory":"API Usage Issues","fixerCustomHeading":"Use Server Timeout","fixerCustomMessage":"In file: \u003cspan class='original_filename'\u003ebuildlet.go\u003c/span\u003e, there is a function \u003cspan class='function_name'\u003emain\u003c/span\u003e that uses a server configuration which does not set any read, write or idle timeout. Server timeouts are necessary to expire inactive connections. Without the timeout, a server may wait indefinitely. iCR suggested that a properly configured server with a timeout should be used instead of the default one.","fixerCustomMessageText":"In file: buildlet.go, there is a function main that uses a server configuration which does not set any read, write or idle timeout. Server timeouts are necessary to expire inactive connections. Without the timeout, a server may wait indefinitely. iCR suggested that a properly configured server with a timeout should be used instead of the default one.","priority":"M","isWarning":"True","projectPath":"/workspace/source","diffLocations":["buildlet.go1061159013.diff"],"scanDate":"Tue Jun 11 03:24:03 UTC 2024"},{"fixerCategoryTag":"GoDCL-1","filePath":"/workspace/source/cmd/gomote/create.go","relatedSourceLocations":null,"className":"null","functionName":"swarmingBuilders","selectedNode":"ctx, _ := context.WithTimeout(context.Background(), 5*time.Second)","fixNo":"AUI-M-4","fixerCategory":"API Usage Issues","fixerCustomHeading":"Detect Context Leak","fixerCustomMessage":"In file: \u003cspan class='original_filename'\u003ecreate.go\u003c/span\u003e, function: \u003cspan class='function_name'\u003eswarmingBuilders\u003c/span\u003e, there is a cancellation function returned by \u003cspan class='key-word'\u003econtext.WithCancel\u003c/span\u003e, \u003cspan class='key-word'\u003econtext.WithTimeout\u003c/span\u003e or \u003cspan class='key-word'\u003econtext.WithDeadline\u003c/span\u003e. However, the cancellation function is ignored using \u003cspan class='key-word'\u003e_\u003c/span\u003e. iCR suggested that the cancellation function must be called or the new context will remain live until the parent context is cancelled.","fixerCustomMessageText":"In file: create.go, function: swarmingBuilders, there is a cancellation function returned by {context.WithCancel}, {context.WithTimeout} or {context.WithDeadline}. However, the cancellation function is ignored using {_}. iCR suggested that the cancellation function must be called or the new context will remain live until the parent context is cancelled.","priority":"M","isWarning":"True","projectPath":"/workspace/source","diffLocations":["create.go2051258270.diff"],"scanDate":"Tue Jun 11 03:24:03 UTC 2024"},{"fixerCategoryTag":"GoDRLV-1","filePath":"/workspace/source/cmd/coordinator/coordinator.go","relatedSourceLocations":["/workspace/source/cmd/coordinator/coordinator.go"],"className":"null","functionName":"cancelBuilds","selectedNode":"go bs.cancelBuild()","fixNo":"CI-M-2","fixerCategory":"Concurrency Issues","fixerCustomHeading":"Detect Wrong References To Loop Variables From A Goroutine","fixerCustomMessage":"In file: \u003cspan class='original_filename'\u003ecoordinator.go\u003c/span\u003e, function: \u003cspan class='function_name'\u003ecancelBuilds\u003c/span\u003e, a goroutine is running inside a loop while using the iteration variable of the enclosing loop. This may lead to a scenario in which the inner function may observe the wrong value of the iteration variable coming from a different iteration and may lead to a race condition. iCR suggested that the iteration variable be redeclared and kept local inside the loop so that the value corresponding to that iteration is available to the goroutine started in the same iteration.","fixerCustomMessageText":"In file: coordinator.go, function: cancelBuilds, a goroutine is running inside a loop while using the iteration variable of the enclosing loop. This may lead to a scenario in which the inner function may observe the wrong value of the iteration variable coming from a different iteration and may lead to a race condition. iCR suggested that the iteration variable be redeclared and kept local inside the loop so that the value corresponding to that iteration is available to the goroutine started in the same iteration.","priority":"M","isWarning":"False","projectPath":"/workspace/source","diffLocations":["coordinator.go1101261273.diff"],"scanDate":"Tue Jun 11 03:24:04 UTC 2024"},{"fixerCategoryTag":"GoDRLV-1","filePath":"/workspace/source/cmd/gitmirror/gitmirror.go","relatedSourceLocations":["/workspace/source/cmd/gitmirror/gitmirror.go"],"className":"null","functionName":"main","selectedNode":"go repo.loop()","fixNo":"CI-M-1","fixerCategory":"Concurrency Issues","fixerCustomHeading":"Detect Wrong References To Loop Variables From A Goroutine","fixerCustomMessage":"In file: \u003cspan class='original_filename'\u003egitmirror.go\u003c/span\u003e, function: \u003cspan class='function_name'\u003emain\u003c/span\u003e, a goroutine is running inside a loop while using the iteration variable of the enclosing loop. This may lead to a scenario in which the inner function may observe the wrong value of the iteration variable coming from a different iteration and may lead to a race condition. iCR suggested that the iteration variable be redeclared and kept local inside the loop so that the value corresponding to that iteration is available to the goroutine started in the same iteration.","fixerCustomMessageText":"In file: gitmirror.go, function: main, a goroutine is running inside a loop while using the iteration variable of the enclosing loop. This may lead to a scenario in which the inner function may observe the wrong value of the iteration variable coming from a different iteration and may lead to a race condition. iCR suggested that the iteration variable be redeclared and kept local inside the loop so that the value corresponding to that iteration is available to the goroutine started in the same iteration.","priority":"M","isWarning":"False","projectPath":"/workspace/source","diffLocations":["gitmirror.go41935522.diff"],"scanDate":"Tue Jun 11 03:24:03 UTC 2024"},{"fixerCategoryTag":"GoCIC-1","filePath":"/workspace/source/devapp/owners/owners.go","relatedSourceLocations":["/workspace/source/devapp/owners/owners.go"],"className":"null","functionName":"Handler","selectedNode":"w.Header().Set(\"Access-Control-Allow-Origin\", \"*\")","fixNo":"SMI-L-2","fixerCategory":"Security Misconfiguration Issues","fixerCustomHeading":"Avoid Permissive CORS Policy in Access-Control-Allow-Origin Header","fixerCustomMessage":"In file: \u003cspan class='original_filename'\u003eowners.go\u003c/span\u003e, the \u003cspan class='key-word'\u003eAccess-Control-Allow-Origin\u003c/span\u003e header in an HTTP Response has permissive Cross-Origin Resource Sharing (\u003ca href='https://en.wikipedia.org/wiki/Cross-origin_resource_sharing' target='_blank'\u003eCORS\u003c/a\u003e) policy. This is insecure as it relaxes the \u003ca href='https://en.wikipedia.org/wiki/Same-origin_policy' target='_blank'\u003esame-origin policy\u003c/a\u003e in the browser. iCR suggested that \u003cspan class='key-word'\u003eAccess-Control-Allow-Origin\u003c/span\u003e should be set to trusted domains. To learn more check \u003ca href='https://cwe.mitre.org/data/definitions/942.html' target='_blank'\u003eCWE-942\u003c/a\u003e.","fixerCustomMessageText":"In file: owners.go, the {Access-Control-Allow-Origin} header in an HTTP Response has permissive Cross-Origin Resource Sharing (CORS) policy. This is insecure as it relaxes the same-origin policy in the browser. iCR suggested that {Access-Control-Allow-Origin} should be set to trusted domains. To learn more check CWE-942.","priority":"L","isWarning":"True","projectPath":"/workspace/source","diffLocations":["owners.go2539575168.diff"],"scanDate":"Tue Jun 11 03:24:04 UTC 2024"},{"fixerCategoryTag":"GoCIC-1","filePath":"/workspace/source/cmd/coordinator/coordinator.go","relatedSourceLocations":["/workspace/source/cmd/coordinator/coordinator.go"],"className":"null","functionName":"serveTryStatusJSON","selectedNode":"w.Header().Set(\"Access-Control-Allow-Origin\", \"*\")","fixNo":"SMI-L-1","fixerCategory":"Security Misconfiguration Issues","fixerCustomHeading":"Avoid Permissive CORS Policy in Access-Control-Allow-Origin Header","fixerCustomMessage":"In file: \u003cspan class='original_filename'\u003ecoordinator.go\u003c/span\u003e, the \u003cspan class='key-word'\u003eAccess-Control-Allow-Origin\u003c/span\u003e header in an HTTP Response has permissive Cross-Origin Resource Sharing (\u003ca href='https://en.wikipedia.org/wiki/Cross-origin_resource_sharing' target='_blank'\u003eCORS\u003c/a\u003e) policy. This is insecure as it relaxes the \u003ca href='https://en.wikipedia.org/wiki/Same-origin_policy' target='_blank'\u003esame-origin policy\u003c/a\u003e in the browser. iCR suggested that \u003cspan class='key-word'\u003eAccess-Control-Allow-Origin\u003c/span\u003e should be set to trusted domains. To learn more check \u003ca href='https://cwe.mitre.org/data/definitions/942.html' target='_blank'\u003eCWE-942\u003c/a\u003e.","fixerCustomMessageText":"In file: coordinator.go, the {Access-Control-Allow-Origin} header in an HTTP Response has permissive Cross-Origin Resource Sharing (CORS) policy. This is insecure as it relaxes the same-origin policy in the browser. iCR suggested that {Access-Control-Allow-Origin} should be set to trusted domains. To learn more check CWE-942.","priority":"L","isWarning":"True","projectPath":"/workspace/source","diffLocations":["coordinator.go3143302038.diff"],"scanDate":"Tue Jun 11 03:24:04 UTC 2024"},{"fixerCategoryTag":"GoCSA-1","filePath":"/workspace/source/perf/app/influx.go","relatedSourceLocations":null,"className":"null","functionName":"compareAndPush","selectedNode":"series = series","fixNo":"IL-L-1","fixerCategory":"Inappropriate Logic","fixerCustomHeading":"Avoid Self Assignment","fixerCustomMessage":"In file: \u003cspan class='original_filename'\u003einflux.go\u003c/span\u003e, there exists an unnecessary self assignment. iCR suggested removing this self assignment.","fixerCustomMessageText":"In file: influx.go, there exists an unnecessary self assignment. iCR suggested removing this self assignment.","priority":"L","isWarning":"True","projectPath":"/workspace/source","diffLocations":["influx.go706578095.diff"],"scanDate":"Tue Jun 11 03:24:04 UTC 2024"},{"fixerCategoryTag":"GoCSA-1","filePath":"/workspace/source/cmd/coordinator/internal/legacydash/dash.go","relatedSourceLocations":["/workspace/source/cmd/coordinator/internal/legacydash/dash.go"],"className":"null","functionName":"Handler","selectedNode":"grpcServer = grpcServer","fixNo":"IL-L-2","fixerCategory":"Inappropriate Logic","fixerCustomHeading":"Avoid Self Assignment","fixerCustomMessage":"In file: \u003cspan class='original_filename'\u003edash.go\u003c/span\u003e, there exists an unnecessary self assignment. iCR suggested removing this self assignment.","fixerCustomMessageText":"In file: dash.go, there exists an unnecessary self assignment. iCR suggested removing this self assignment.","priority":"L","isWarning":"True","projectPath":"/workspace/source","diffLocations":["dash.go605236223.diff"],"scanDate":"Tue Jun 11 03:24:04 UTC 2024"},{"fixerCategoryTag":"GoESC-1","filePath":"/workspace/source/internal/task/milestones.go","relatedSourceLocations":null,"className":"null","functionName":"findMilestone","selectedNode":"strings.ToLower(name) != strings.ToLower(m.Title)","fixNo":"AUI-L-1","fixerCategory":"API Usage Issues","fixerCustomHeading":"Use Better API for Case Insensitive String Equality Check","fixerCustomMessage":"In file: \u003cspan class='original_filename'\u003emilestones.go\u003c/span\u003e, there is a function \u003cspan class='function_name'\u003efindMilestone\u003c/span\u003e that performs a case insensitive \u003cspan class='key-word'\u003eString\u003c/span\u003e equality check. String comparison with \u003cspan class='key-word'\u003estrings.ToLower\u003c/span\u003e or \u003cspan class='key-word'\u003estrings.ToUpper\u003c/span\u003e is significantly more expensive. For example, \u003cspan class='key-word'\u003estrings.ToLower\u003c/span\u003e will have to allocate memory for the new strings, and then convert the string to lower case. It is better to do the case insensitive equality check using the \u003ca href='https://pkg.go.dev/strings#EqualFold' target='_blank'\u003estrings.EqualFold\u003c/a\u003e function. This function does not need to create two intermediate strings and can return as soon as the first non-matching character has been found. iCR fixed the issue by introducing the \u003cspan class='key-word'\u003estrings.EqualFold\u003c/span\u003e function.","fixerCustomMessageText":"In file: milestones.go, there is a function findMilestone that performs a case insensitive {String} equality check. String comparison with {strings.ToLower} or {strings.ToUpper} is significantly more expensive. For example, {strings.ToLower} will have to allocate memory for the new strings, and then convert the string to lower case. It is better to do the case insensitive equality check using the strings.EqualFold function. This function does not need to create two intermediate strings and can return as soon as the first non-matching character has been found. iCR fixed the issue by introducing the {strings.EqualFold} function.","priority":"L","isWarning":"False","projectPath":"/workspace/source","diffLocations":["milestones.go190779484.diff"],"scanDate":"Tue Jun 11 03:24:04 UTC 2024"},{"fixerCategoryTag":"GoFDR-2","filePath":"/workspace/source/internal/singleflight/singleflight.go","relatedSourceLocations":null,"className":"null","functionName":"doCall","selectedNode":"ch \u003c- Result{c.val, c.err, c.dups \u003e 0}","fixNo":"CI-H-20","fixerCategory":"Concurrency Issues","fixerCustomHeading":"Avoid Blocking Channel Operation","fixerCustomMessage":"In file: \u003cspan class='original_filename'\u003esingleflight.go\u003c/span\u003e, there is a function \u003cspan class='function_name'\u003edoCall\u003c/span\u003e which contains a send or a receive operation on a channel and there is no matching receive or send operation on that channel from another goroutine. The goroutine will be blocking on that channel operation. iCR identified the source of the possible blocking channel operation and suggested to avoid it.","fixerCustomMessageText":"In file: singleflight.go, there is a function doCall which contains a send or a receive operation on a channel and there is no matching receive or send operation on that channel from another goroutine. The goroutine will be blocking on that channel operation. iCR identified the source of the possible blocking channel operation and suggested to avoid it.","priority":"H","isWarning":"True","projectPath":"/workspace/source","diffLocations":["singleflight.go943257553.diff"],"scanDate":"Tue Jun 11 03:24:04 UTC 2024"},{"fixerCategoryTag":"GoFDR-2","filePath":"/workspace/source/cmd/coordinator/coordinator.go","relatedSourceLocations":["/workspace/source/cmd/coordinator/coordinator.go"],"className":"null","functionName":"findWorkLoop","selectedNode":"for range ticker.C {\n\tif err := findWork(); err != nil {\n\t\tlog.Printf(\"failed to find new work: %v\", err)\n\t}\n}","fixNo":"CI-H-9","fixerCategory":"Concurrency Issues","fixerCustomHeading":"Avoid Blocking Channel Operation","fixerCustomMessage":"In file: \u003cspan class='original_filename'\u003ecoordinator.go\u003c/span\u003e, there is a function \u003cspan class='function_name'\u003efindWorkLoop\u003c/span\u003e which contains a send or a receive operation on a channel and there is no matching receive or send operation on that channel from another goroutine. The goroutine will be blocking on that channel operation. iCR identified the source of the possible blocking channel operation and suggested to avoid it.","fixerCustomMessageText":"In file: coordinator.go, there is a function findWorkLoop which contains a send or a receive operation on a channel and there is no matching receive or send operation on that channel from another goroutine. The goroutine will be blocking on that channel operation. iCR identified the source of the possible blocking channel operation and suggested to avoid it.","priority":"H","isWarning":"True","projectPath":"/workspace/source","diffLocations":["coordinator.go4033528645.diff"],"scanDate":"Tue Jun 11 03:24:04 UTC 2024"},{"fixerCategoryTag":"GoFDR-2","filePath":"/workspace/source/internal/internal.go","relatedSourceLocations":null,"className":"null","functionName":"WaitOrStop","selectedNode":"errc \u003c- err","fixNo":"CI-H-8","fixerCategory":"Concurrency Issues","fixerCustomHeading":"Avoid Blocking Channel Operation","fixerCustomMessage":"In file: \u003cspan class='original_filename'\u003einternal.go\u003c/span\u003e, there is a function \u003cspan class='function_name'\u003eWaitOrStop\u003c/span\u003e which contains a send or a receive operation on a channel and there is no matching receive or send operation on that channel from another goroutine. The goroutine will be blocking on that channel operation. iCR identified the source of the possible blocking channel operation and suggested to avoid it.","fixerCustomMessageText":"In file: internal.go, there is a function WaitOrStop which contains a send or a receive operation on a channel and there is no matching receive or send operation on that channel from another goroutine. The goroutine will be blocking on that channel operation. iCR identified the source of the possible blocking channel operation and suggested to avoid it.","priority":"H","isWarning":"True","projectPath":"/workspace/source","diffLocations":["internal.go2898706048.diff"],"scanDate":"Tue Jun 11 03:24:03 UTC 2024"},{"fixerCategoryTag":"GoFDR-2","filePath":"/workspace/source/maintner/maintnerd/gcslog/gcslog.go","relatedSourceLocations":["/workspace/source/maintner/maintnerd/gcslog/gcslog.go"],"className":"null","functionName":"CopyFrom","selectedNode":"for e := range src.GetMutations(ctx) {\n\tif e.Err != nil {\n\t\tlog.Printf(\"Corpus.Initialize: %v\", e.Err)\n\t\treturn e.Err\n\t}\n\tif e.End {\n\t\tlog.Printf(\"reached end. flushing.\")\n\t\terr := gl.flush(ctx)\n\t\tlog.Printf(\"final flush = %v\", err)\n\t\treturn nil\n\t}\n\tif err := gl.Log(e.Mutation); err != nil {\n\t\treturn err\n\t}\n}","fixNo":"CI-H-17","fixerCategory":"Concurrency Issues","fixerCustomHeading":"Avoid Blocking Channel Operation","fixerCustomMessage":"In file: \u003cspan class='original_filename'\u003egcslog.go\u003c/span\u003e, there is a function \u003cspan class='function_name'\u003eCopyFrom\u003c/span\u003e which contains a send or a receive operation on a channel and there is no matching receive or send operation on that channel from another goroutine. The goroutine will be blocking on that channel operation. iCR identified the source of the possible blocking channel operation and suggested to avoid it.","fixerCustomMessageText":"In file: gcslog.go, there is a function CopyFrom which contains a send or a receive operation on a channel and there is no matching receive or send operation on that channel from another goroutine. The goroutine will be blocking on that channel operation. iCR identified the source of the possible blocking channel operation and suggested to avoid it.","priority":"H","isWarning":"True","projectPath":"/workspace/source","diffLocations":["gcslog.go2941690883.diff"],"scanDate":"Tue Jun 11 03:24:04 UTC 2024"},{"fixerCategoryTag":"GoFDR-2","filePath":"/workspace/source/internal/coordinator/remote/ssh.go","relatedSourceLocations":null,"className":"null","functionName":"HandleIncomingSSHPostAuth","selectedNode":"for win := range winCh {\n\tsetWinsize(f, win.Width, win.Height)\n}","fixNo":"CI-H-7","fixerCategory":"Concurrency Issues","fixerCustomHeading":"Avoid Blocking Channel Operation","fixerCustomMessage":"In file: \u003cspan class='original_filename'\u003essh.go\u003c/span\u003e, there is a function \u003cspan class='function_name'\u003eHandleIncomingSSHPostAuth\u003c/span\u003e which contains a send or a receive operation on a channel and there is no matching receive or send operation on that channel from another goroutine. The goroutine will be blocking on that channel operation. iCR identified the source of the possible blocking channel operation and suggested to avoid it.","fixerCustomMessageText":"In file: ssh.go, there is a function HandleIncomingSSHPostAuth which contains a send or a receive operation on a channel and there is no matching receive or send operation on that channel from another goroutine. The goroutine will be blocking on that channel operation. iCR identified the source of the possible blocking channel operation and suggested to avoid it.","priority":"H","isWarning":"True","projectPath":"/workspace/source","diffLocations":["ssh.go2126198912.diff"],"scanDate":"Tue Jun 11 03:24:03 UTC 2024"},{"fixerCategoryTag":"GoFDR-2","filePath":"/workspace/source/maintner/maintnerd/maintnerd.go","relatedSourceLocations":null,"className":"null","functionName":"main","selectedNode":"for evt := range mutSrc.GetMutations(ctx) {\n\tif evt.Err != nil {\n\t\tlog.Fatal(evt.Err)\n\t}\n\tif evt.End {\n\t\tbreak\n\t}\n}","fixNo":"CI-H-4","fixerCategory":"Concurrency Issues","fixerCustomHeading":"Avoid Blocking Channel Operation","fixerCustomMessage":"In file: \u003cspan class='original_filename'\u003emaintnerd.go\u003c/span\u003e, there is a function \u003cspan class='function_name'\u003emain\u003c/span\u003e which contains a send or a receive operation on a channel and there is no matching receive or send operation on that channel from another goroutine. The goroutine will be blocking on that channel operation. iCR identified the source of the possible blocking channel operation and suggested to avoid it.","fixerCustomMessageText":"In file: maintnerd.go, there is a function main which contains a send or a receive operation on a channel and there is no matching receive or send operation on that channel from another goroutine. The goroutine will be blocking on that channel operation. iCR identified the source of the possible blocking channel operation and suggested to avoid it.","priority":"H","isWarning":"True","projectPath":"/workspace/source","diffLocations":["maintnerd.go1174193146.diff"],"scanDate":"Tue Jun 11 03:24:03 UTC 2024"},{"fixerCategoryTag":"GoFDR-2","filePath":"/workspace/source/pargzip/pargzip.go","relatedSourceLocations":null,"className":"null","functionName":"Close","selectedNode":"\u003c-w.allWritten","fixNo":"CI-H-18","fixerCategory":"Concurrency Issues","fixerCustomHeading":"Avoid Blocking Channel Operation","fixerCustomMessage":"In file: \u003cspan class='original_filename'\u003epargzip.go\u003c/span\u003e, there is a function \u003cspan class='function_name'\u003eClose\u003c/span\u003e which contains a send or a receive operation on a channel and there is no matching receive or send operation on that channel from another goroutine. The goroutine will be blocking on that channel operation. iCR identified the source of the possible blocking channel operation and suggested to avoid it.","fixerCustomMessageText":"In file: pargzip.go, there is a function Close which contains a send or a receive operation on a channel and there is no matching receive or send operation on that channel from another goroutine. The goroutine will be blocking on that channel operation. iCR identified the source of the possible blocking channel operation and suggested to avoid it.","priority":"H","isWarning":"True","projectPath":"/workspace/source","diffLocations":["pargzip.go494879632.diff"],"scanDate":"Tue Jun 11 03:24:04 UTC 2024"},{"fixerCategoryTag":"GoFDR-2","filePath":"/workspace/source/internal/coordinator/remote/ssh.go","relatedSourceLocations":null,"className":"null","functionName":"HandleIncomingSSHPostAuthSwarming","selectedNode":"for win := range winCh {\n\tsetWinsize(f, win.Width, win.Height)\n}","fixNo":"CI-H-6","fixerCategory":"Concurrency Issues","fixerCustomHeading":"Avoid Blocking Channel Operation","fixerCustomMessage":"In file: \u003cspan class='original_filename'\u003essh.go\u003c/span\u003e, there is a function \u003cspan class='function_name'\u003eHandleIncomingSSHPostAuthSwarming\u003c/span\u003e which contains a send or a receive operation on a channel and there is no matching receive or send operation on that channel from another goroutine. The goroutine will be blocking on that channel operation. iCR identified the source of the possible blocking channel operation and suggested to avoid it.","fixerCustomMessageText":"In file: ssh.go, there is a function HandleIncomingSSHPostAuthSwarming which contains a send or a receive operation on a channel and there is no matching receive or send operation on that channel from another goroutine. The goroutine will be blocking on that channel operation. iCR identified the source of the possible blocking channel operation and suggested to avoid it.","priority":"H","isWarning":"True","projectPath":"/workspace/source","diffLocations":["ssh.go3534341501.diff"],"scanDate":"Tue Jun 11 03:24:03 UTC 2024"},{"fixerCategoryTag":"GoFDR-2","filePath":"/workspace/source/pargzip/pargzip.go","relatedSourceLocations":null,"className":"null","functionName":"init","selectedNode":"for c := range w.chunkc {\n\tif err := w.writeCompressedChunk(c); err != nil {\n\t\tclose(w.wasWriteErr)\n\t\treturn\n\t}\n}","fixNo":"CI-H-19","fixerCategory":"Concurrency Issues","fixerCustomHeading":"Avoid Blocking Channel Operation","fixerCustomMessage":"In file: \u003cspan class='original_filename'\u003epargzip.go\u003c/span\u003e, there is a function \u003cspan class='function_name'\u003einit\u003c/span\u003e which contains a send or a receive operation on a channel and there is no matching receive or send operation on that channel from another goroutine. The goroutine will be blocking on that channel operation. iCR identified the source of the possible blocking channel operation and suggested to avoid it.","fixerCustomMessageText":"In file: pargzip.go, there is a function init which contains a send or a receive operation on a channel and there is no matching receive or send operation on that channel from another goroutine. The goroutine will be blocking on that channel operation. iCR identified the source of the possible blocking channel operation and suggested to avoid it.","priority":"H","isWarning":"True","projectPath":"/workspace/source","diffLocations":["pargzip.go3053673837.diff"],"scanDate":"Tue Jun 11 03:24:04 UTC 2024"},{"fixerCategoryTag":"GoFDR-2","filePath":"/workspace/source/cmd/buildlet/ssh.go","relatedSourceLocations":null,"className":"null","functionName":"sshHandler","selectedNode":"for win := range winCh {\n\tpty.Setsize(f, \u0026pty.Winsize{\n\t\tRows: uint16(win.Height),\n\t\tCols: uint16(win.Width),\n\t})\n}","fixNo":"CI-H-5","fixerCategory":"Concurrency Issues","fixerCustomHeading":"Avoid Blocking Channel Operation","fixerCustomMessage":"In file: \u003cspan class='original_filename'\u003essh.go\u003c/span\u003e, there is a function \u003cspan class='function_name'\u003esshHandler\u003c/span\u003e which contains a send or a receive operation on a channel and there is no matching receive or send operation on that channel from another goroutine. The goroutine will be blocking on that channel operation. iCR identified the source of the possible blocking channel operation and suggested to avoid it.","fixerCustomMessageText":"In file: ssh.go, there is a function sshHandler which contains a send or a receive operation on a channel and there is no matching receive or send operation on that channel from another goroutine. The goroutine will be blocking on that channel operation. iCR identified the source of the possible blocking channel operation and suggested to avoid it.","priority":"H","isWarning":"True","projectPath":"/workspace/source","diffLocations":["ssh.go2497068232.diff"],"scanDate":"Tue Jun 11 03:24:03 UTC 2024"},{"fixerCategoryTag":"GoFDR-2","filePath":"/workspace/source/cmd/securitybot/main.go","relatedSourceLocations":null,"className":"null","functionName":"Close","selectedNode":"g.stop \u003c- true","fixNo":"CI-H-21","fixerCategory":"Concurrency Issues","fixerCustomHeading":"Avoid Blocking Channel Operation","fixerCustomMessage":"In file: \u003cspan class='original_filename'\u003emain.go\u003c/span\u003e, there is a function \u003cspan class='function_name'\u003eClose\u003c/span\u003e which contains a send or a receive operation on a channel and there is no matching receive or send operation on that channel from another goroutine. The goroutine will be blocking on that channel operation. iCR identified the source of the possible blocking channel operation and suggested to avoid it.","fixerCustomMessageText":"In file: main.go, there is a function Close which contains a send or a receive operation on a channel and there is no matching receive or send operation on that channel from another goroutine. The goroutine will be blocking on that channel operation. iCR identified the source of the possible blocking channel operation and suggested to avoid it.","priority":"H","isWarning":"True","projectPath":"/workspace/source","diffLocations":["main.go3674555366.diff"],"scanDate":"Tue Jun 11 03:24:04 UTC 2024"},{"fixerCategoryTag":"GoFDR-2","filePath":"/workspace/source/cmd/pubsubhelper/pubsubhelper.go","relatedSourceLocations":["/workspace/source/cmd/pubsubhelper/pubsubhelper.go"],"className":"null","functionName":"main","selectedNode":"errc \u003c- fmt.Errorf(\"SMTP ListenAndServe: %v\", err)","fixNo":"CI-H-22","fixerCategory":"Concurrency Issues","fixerCustomHeading":"Avoid Blocking Channel Operation","fixerCustomMessage":"In file: \u003cspan class='original_filename'\u003epubsubhelper.go\u003c/span\u003e, there is a function \u003cspan class='function_name'\u003emain\u003c/span\u003e which contains a send or a receive operation on a channel and there is no matching receive or send operation on that channel from another goroutine. The goroutine will be blocking on that channel operation. iCR identified the source of the possible blocking channel operation and suggested to avoid it.","fixerCustomMessageText":"In file: pubsubhelper.go, there is a function main which contains a send or a receive operation on a channel and there is no matching receive or send operation on that channel from another goroutine. The goroutine will be blocking on that channel operation. iCR identified the source of the possible blocking channel operation and suggested to avoid it.","priority":"H","isWarning":"True","projectPath":"/workspace/source","diffLocations":["pubsubhelper.go1460275076.diff"],"scanDate":"Tue Jun 11 03:24:04 UTC 2024"},{"fixerCategoryTag":"GoFDR-2","filePath":"/workspace/source/cmd/makemac/main.go","relatedSourceLocations":null,"className":"null","functionName":"main","selectedNode":"for range t.C {\n\tcheckAndRenewLeases(c)\n}","fixNo":"CI-H-1","fixerCategory":"Concurrency Issues","fixerCustomHeading":"Avoid Blocking Channel Operation","fixerCustomMessage":"In file: \u003cspan class='original_filename'\u003emain.go\u003c/span\u003e, there is a function \u003cspan class='function_name'\u003emain\u003c/span\u003e which contains a send or a receive operation on a channel and there is no matching receive or send operation on that channel from another goroutine. The goroutine will be blocking on that channel operation. iCR identified the source of the possible blocking channel operation and suggested to avoid it.","fixerCustomMessageText":"In file: main.go, there is a function main which contains a send or a receive operation on a channel and there is no matching receive or send operation on that channel from another goroutine. The goroutine will be blocking on that channel operation. iCR identified the source of the possible blocking channel operation and suggested to avoid it.","priority":"H","isWarning":"True","projectPath":"/workspace/source","diffLocations":["main.go3790723606.diff"],"scanDate":"Tue Jun 11 03:24:02 UTC 2024"},{"fixerCategoryTag":"GoFDR-3","filePath":"/workspace/source/maintner/github.go","relatedSourceLocations":["/workspace/source/maintner/github.go"],"className":"null","functionName":"syncIssues","selectedNode":"p.c.mu","fixNo":"CI-H-16","fixerCategory":"Concurrency Issues","fixerCustomHeading":"Avoid Possible Lock Acquisition Nondeterminism","fixerCustomMessage":"In file: \u003cspan class='original_filename'\u003egithub.go\u003c/span\u003e, there is a function \u003cspan class='function_name'\u003esyncIssues\u003c/span\u003e with a lock region. But the same lock is also acquired from another goroutine. Since there is no global order, the program may generate non-deterministic results. iCR suggested a possible race in lock acquisition. To learn more check \u003ca href='https://cwe.mitre.org/data/definitions/366.html' target='_blank'\u003eCWE-366\u003c/a\u003e.","fixerCustomMessageText":"In file: github.go, there is a function syncIssues with a lock region. But the same lock is also acquired from another goroutine. Since there is no global order, the program may generate non-deterministic results. iCR suggested a possible race in lock acquisition. To learn more check CWE-366.","priority":"H","isWarning":"True","projectPath":"/workspace/source","diffLocations":["github.go3087599903.diff"],"scanDate":"Tue Jun 11 03:24:04 UTC 2024"},{"fixerCategoryTag":"GoFDR-3","filePath":"/workspace/source/maintner/github.go","relatedSourceLocations":["/workspace/source/maintner/github.go"],"className":"null","functionName":"syncCommentsOnIssue","selectedNode":"p.c.mu","fixNo":"CI-H-10","fixerCategory":"Concurrency Issues","fixerCustomHeading":"Avoid Possible Lock Acquisition Nondeterminism","fixerCustomMessage":"In file: \u003cspan class='original_filename'\u003egithub.go\u003c/span\u003e, there is a function \u003cspan class='function_name'\u003esyncCommentsOnIssue\u003c/span\u003e with a lock region. But the same lock is also acquired from another goroutine. Since there is no global order, the program may generate non-deterministic results. iCR suggested a possible race in lock acquisition. To learn more check \u003ca href='https://cwe.mitre.org/data/definitions/366.html' target='_blank'\u003eCWE-366\u003c/a\u003e.","fixerCustomMessageText":"In file: github.go, there is a function syncCommentsOnIssue with a lock region. But the same lock is also acquired from another goroutine. Since there is no global order, the program may generate non-deterministic results. iCR suggested a possible race in lock acquisition. To learn more check CWE-366.","priority":"H","isWarning":"True","projectPath":"/workspace/source","diffLocations":["github.go4120605598.diff"],"scanDate":"Tue Jun 11 03:24:04 UTC 2024"},{"fixerCategoryTag":"GoFDR-3","filePath":"/workspace/source/maintner/github.go","relatedSourceLocations":["/workspace/source/maintner/github.go"],"className":"null","functionName":"issueNumbersWithStaleCommentSync","selectedNode":"p.c.mu","fixNo":"CI-H-11","fixerCategory":"Concurrency Issues","fixerCustomHeading":"Avoid Possible Lock Acquisition Nondeterminism","fixerCustomMessage":"In file: \u003cspan class='original_filename'\u003egithub.go\u003c/span\u003e, there is a function \u003cspan class='function_name'\u003eissueNumbersWithStaleCommentSync\u003c/span\u003e with a lock region. But the same lock is also acquired from another goroutine. Since there is no global order, the program may generate non-deterministic results. iCR suggested a possible race in lock acquisition. To learn more check \u003ca href='https://cwe.mitre.org/data/definitions/366.html' target='_blank'\u003eCWE-366\u003c/a\u003e.","fixerCustomMessageText":"In file: github.go, there is a function issueNumbersWithStaleCommentSync with a lock region. But the same lock is also acquired from another goroutine. Since there is no global order, the program may generate non-deterministic results. iCR suggested a possible race in lock acquisition. To learn more check CWE-366.","priority":"H","isWarning":"True","projectPath":"/workspace/source","diffLocations":["github.go2312426449.diff"],"scanDate":"Tue Jun 11 03:24:04 UTC 2024"},{"fixerCategoryTag":"GoFDR-3","filePath":"/workspace/source/maintner/github.go","relatedSourceLocations":["/workspace/source/maintner/github.go"],"className":"null","functionName":"syncCommentsOnIssue","selectedNode":"p.c.mu","fixNo":"CI-H-12","fixerCategory":"Concurrency Issues","fixerCustomHeading":"Avoid Possible Lock Acquisition Nondeterminism","fixerCustomMessage":"In file: \u003cspan class='original_filename'\u003egithub.go\u003c/span\u003e, there is a function \u003cspan class='function_name'\u003esyncCommentsOnIssue\u003c/span\u003e with a lock region. But the same lock is also acquired from another goroutine. Since there is no global order, the program may generate non-deterministic results. iCR suggested a possible race in lock acquisition. To learn more check \u003ca href='https://cwe.mitre.org/data/definitions/366.html' target='_blank'\u003eCWE-366\u003c/a\u003e.","fixerCustomMessageText":"In file: github.go, there is a function syncCommentsOnIssue with a lock region. But the same lock is also acquired from another goroutine. Since there is no global order, the program may generate non-deterministic results. iCR suggested a possible race in lock acquisition. To learn more check CWE-366.","priority":"H","isWarning":"True","projectPath":"/workspace/source","diffLocations":["github.go4161653137.diff"],"scanDate":"Tue Jun 11 03:24:04 UTC 2024"},{"fixerCategoryTag":"GoFDR-3","filePath":"/workspace/source/maintner/github.go","relatedSourceLocations":["/workspace/source/maintner/github.go"],"className":"null","functionName":"issueNumbersWithStaleEventSync","selectedNode":"p.c.mu","fixNo":"CI-H-13","fixerCategory":"Concurrency Issues","fixerCustomHeading":"Avoid Possible Lock Acquisition Nondeterminism","fixerCustomMessage":"In file: \u003cspan class='original_filename'\u003egithub.go\u003c/span\u003e, there is a function \u003cspan class='function_name'\u003eissueNumbersWithStaleEventSync\u003c/span\u003e with a lock region. But the same lock is also acquired from another goroutine. Since there is no global order, the program may generate non-deterministic results. iCR suggested a possible race in lock acquisition. To learn more check \u003ca href='https://cwe.mitre.org/data/definitions/366.html' target='_blank'\u003eCWE-366\u003c/a\u003e.","fixerCustomMessageText":"In file: github.go, there is a function issueNumbersWithStaleEventSync with a lock region. But the same lock is also acquired from another goroutine. Since there is no global order, the program may generate non-deterministic results. iCR suggested a possible race in lock acquisition. To learn more check CWE-366.","priority":"H","isWarning":"True","projectPath":"/workspace/source","diffLocations":["github.go2090693799.diff"],"scanDate":"Tue Jun 11 03:24:04 UTC 2024"},{"fixerCategoryTag":"GoFDR-3","filePath":"/workspace/source/maintner/github.go","relatedSourceLocations":["/workspace/source/maintner/github.go"],"className":"null","functionName":"syncEventsOnIssue","selectedNode":"p.c.mu","fixNo":"CI-H-14","fixerCategory":"Concurrency Issues","fixerCustomHeading":"Avoid Possible Lock Acquisition Nondeterminism","fixerCustomMessage":"In file: \u003cspan class='original_filename'\u003egithub.go\u003c/span\u003e, there is a function \u003cspan class='function_name'\u003esyncEventsOnIssue\u003c/span\u003e with a lock region. But the same lock is also acquired from another goroutine. Since there is no global order, the program may generate non-deterministic results. iCR suggested a possible race in lock acquisition. To learn more check \u003ca href='https://cwe.mitre.org/data/definitions/366.html' target='_blank'\u003eCWE-366\u003c/a\u003e.","fixerCustomMessageText":"In file: github.go, there is a function syncEventsOnIssue with a lock region. But the same lock is also acquired from another goroutine. Since there is no global order, the program may generate non-deterministic results. iCR suggested a possible race in lock acquisition. To learn more check CWE-366.","priority":"H","isWarning":"True","projectPath":"/workspace/source","diffLocations":["github.go2719791164.diff"],"scanDate":"Tue Jun 11 03:24:04 UTC 2024"},{"fixerCategoryTag":"GoFDR-3","filePath":"/workspace/source/maintner/maintner.go","relatedSourceLocations":null,"className":"null","functionName":"addMutation","selectedNode":"c.mu","fixNo":"CI-H-3","fixerCategory":"Concurrency Issues","fixerCustomHeading":"Avoid Possible Lock Acquisition Nondeterminism","fixerCustomMessage":"In file: \u003cspan class='original_filename'\u003emaintner.go\u003c/span\u003e, there is a function \u003cspan class='function_name'\u003eaddMutation\u003c/span\u003e with a lock region. But the same lock is also acquired from another goroutine. Since there is no global order, the program may generate non-deterministic results. iCR suggested a possible race in lock acquisition. To learn more check \u003ca href='https://cwe.mitre.org/data/definitions/366.html' target='_blank'\u003eCWE-366\u003c/a\u003e.","fixerCustomMessageText":"In file: maintner.go, there is a function addMutation with a lock region. But the same lock is also acquired from another goroutine. Since there is no global order, the program may generate non-deterministic results. iCR suggested a possible race in lock acquisition. To learn more check CWE-366.","priority":"H","isWarning":"True","projectPath":"/workspace/source","diffLocations":["maintner.go1404561971.diff"],"scanDate":"Tue Jun 11 03:24:03 UTC 2024"},{"fixerCategoryTag":"GoFDR-3","filePath":"/workspace/source/maintner/github.go","relatedSourceLocations":["/workspace/source/maintner/github.go"],"className":"null","functionName":"syncIssues","selectedNode":"p.c.mu","fixNo":"CI-H-15","fixerCategory":"Concurrency Issues","fixerCustomHeading":"Avoid Possible Lock Acquisition Nondeterminism","fixerCustomMessage":"In file: \u003cspan class='original_filename'\u003egithub.go\u003c/span\u003e, there is a function \u003cspan class='function_name'\u003esyncIssues\u003c/span\u003e with a lock region. But the same lock is also acquired from another goroutine. Since there is no global order, the program may generate non-deterministic results. iCR suggested a possible race in lock acquisition. To learn more check \u003ca href='https://cwe.mitre.org/data/definitions/366.html' target='_blank'\u003eCWE-366\u003c/a\u003e.","fixerCustomMessageText":"In file: github.go, there is a function syncIssues with a lock region. But the same lock is also acquired from another goroutine. Since there is no global order, the program may generate non-deterministic results. iCR suggested a possible race in lock acquisition. To learn more check CWE-366.","priority":"H","isWarning":"True","projectPath":"/workspace/source","diffLocations":["github.go2466230998.diff"],"scanDate":"Tue Jun 11 03:24:04 UTC 2024"},{"fixerCategoryTag":"GoFDR-3","filePath":"/workspace/source/internal/coordinator/pool/reverse.go","relatedSourceLocations":["/workspace/source/internal/coordinator/pool/reverse.go"],"className":"null","functionName":"healthCheckBuildlet","selectedNode":"p.mu","fixNo":"CI-H-23","fixerCategory":"Concurrency Issues","fixerCustomHeading":"Avoid Possible Lock Acquisition Nondeterminism","fixerCustomMessage":"In file: \u003cspan class='original_filename'\u003ereverse.go\u003c/span\u003e, there is a function \u003cspan class='function_name'\u003ehealthCheckBuildlet\u003c/span\u003e with a lock region. But the same lock is also acquired from another goroutine. Since there is no global order, the program may generate non-deterministic results. iCR suggested a possible race in lock acquisition. To learn more check \u003ca href='https://cwe.mitre.org/data/definitions/366.html' target='_blank'\u003eCWE-366\u003c/a\u003e.","fixerCustomMessageText":"In file: reverse.go, there is a function healthCheckBuildlet with a lock region. But the same lock is also acquired from another goroutine. Since there is no global order, the program may generate non-deterministic results. iCR suggested a possible race in lock acquisition. To learn more check CWE-366.","priority":"H","isWarning":"True","projectPath":"/workspace/source","diffLocations":["reverse.go951910403.diff"],"scanDate":"Tue Jun 11 03:24:05 UTC 2024"},{"fixerCategoryTag":"GoFDR-3","filePath":"/workspace/source/internal/coordinator/pool/reverse.go","relatedSourceLocations":["/workspace/source/internal/coordinator/pool/reverse.go"],"className":"null","functionName":"healthCheckBuildlet","selectedNode":"p.mu","fixNo":"CI-H-24","fixerCategory":"Concurrency Issues","fixerCustomHeading":"Avoid Possible Lock Acquisition Nondeterminism","fixerCustomMessage":"In file: \u003cspan class='original_filename'\u003ereverse.go\u003c/span\u003e, there is a function \u003cspan class='function_name'\u003ehealthCheckBuildlet\u003c/span\u003e with a lock region. But the same lock is also acquired from another goroutine. Since there is no global order, the program may generate non-deterministic results. iCR suggested a possible race in lock acquisition. To learn more check \u003ca href='https://cwe.mitre.org/data/definitions/366.html' target='_blank'\u003eCWE-366\u003c/a\u003e.","fixerCustomMessageText":"In file: reverse.go, there is a function healthCheckBuildlet with a lock region. But the same lock is also acquired from another goroutine. Since there is no global order, the program may generate non-deterministic results. iCR suggested a possible race in lock acquisition. To learn more check CWE-366.","priority":"H","isWarning":"True","projectPath":"/workspace/source","diffLocations":["reverse.go1311703454.diff"],"scanDate":"Tue Jun 11 03:24:05 UTC 2024"},{"fixerCategoryTag":"GoFT-18","filePath":"/workspace/source/cmd/buildlet/buildlet.go","relatedSourceLocations":["/workspace/source/cmd/buildlet/buildlet.go"],"className":"null","functionName":"untar","selectedNode":"tar.NewReader(zr)","fixNo":"IAC-H-2","fixerCategory":"Improper Access Control","fixerCustomHeading":"Prevent Untrusted File Extraction","fixerCustomMessage":"In file: \u003cspan class='original_filename'\u003ebuildlet.go\u003c/span\u003e, there is a function \u003cspan class='function_name'\u003euntar\u003c/span\u003e that extracts an archive file specified by input from an external source. This may allow an attacker to force an application to extract a \u003ca href='https://en.wikipedia.org/wiki/Zip_bomb' target='_blank'\u003ezip bomb\u003c/a\u003e, i.e., an archived file that is small in size but that becomes huge when extracted. iCR suggested that the file extraction operation be done in a controlled environment that checks the extracted file size and enforces a limit. To learn more check \u003ca href='https://cwe.mitre.org/data/definitions/409.html' target='_blank'\u003eCWE-409\u003c/a\u003e.","fixerCustomMessageText":"In file: buildlet.go, there is a function untar that extracts an archive file specified by input from an external source. This may allow an attacker to force an application to extract a zip bomb, i.e., an archived file that is small in size but that becomes huge when extracted. iCR suggested that the file extraction operation be done in a controlled environment that checks the extracted file size and enforces a limit. To learn more check CWE-409.","priority":"H","isWarning":"True","projectPath":"/workspace/source","diffLocations":["buildlet.go2873898163.diff"],"scanDate":"Tue Jun 11 03:24:03 UTC 2024"},{"fixerCategoryTag":"GoFT-18","filePath":"/workspace/source/cmd/buildlet/buildlet.go","relatedSourceLocations":["/workspace/source/cmd/buildlet/buildlet.go"],"className":"null","functionName":"untar","selectedNode":"gzip.NewReader(r)","fixNo":"IAC-H-1","fixerCategory":"Improper Access Control","fixerCustomHeading":"Prevent Untrusted File Extraction","fixerCustomMessage":"In file: \u003cspan class='original_filename'\u003ebuildlet.go\u003c/span\u003e, there is a function \u003cspan class='function_name'\u003euntar\u003c/span\u003e that extracts an archive file specified by input from an external source. This may allow an attacker to force an application to extract a \u003ca href='https://en.wikipedia.org/wiki/Zip_bomb' target='_blank'\u003ezip bomb\u003c/a\u003e, i.e., an archived file that is small in size but that becomes huge when extracted. iCR suggested that the file extraction operation be done in a controlled environment that checks the extracted file size and enforces a limit. To learn more check \u003ca href='https://cwe.mitre.org/data/definitions/409.html' target='_blank'\u003eCWE-409\u003c/a\u003e.","fixerCustomMessageText":"In file: buildlet.go, there is a function untar that extracts an archive file specified by input from an external source. This may allow an attacker to force an application to extract a zip bomb, i.e., an archived file that is small in size but that becomes huge when extracted. iCR suggested that the file extraction operation be done in a controlled environment that checks the extracted file size and enforces a limit. To learn more check CWE-409.","priority":"H","isWarning":"True","projectPath":"/workspace/source","diffLocations":["buildlet.go4184727531.diff"],"scanDate":"Tue Jun 11 03:24:03 UTC 2024"},{"fixerCategoryTag":"GoFT-2","filePath":"/workspace/source/cmd/buildlet/buildlet.go","relatedSourceLocations":["/workspace/source/cmd/buildlet/buildlet.go"],"className":"null","functionName":"appendSSHAuthorizedKey","selectedNode":"exec.Command(\"/usr/sbin/chown\", \"-R\", sshUser, sshDir).Run()","fixNo":"IN-H-9","fixerCategory":"Injection","fixerCustomHeading":"Prevent OS Command Injection","fixerCustomMessage":"In file: \u003cspan class='original_filename'\u003ebuildlet.go\u003c/span\u003e, there is a function \u003cspan class='function_name'\u003eappendSSHAuthorizedKey\u003c/span\u003e that is vulnerable to attacks which can \u003ca href='https://cwe.mitre.org/data/definitions/78.html' target='_blank'\u003eexecute arbitrary operating system(OS) commands\u003c/a\u003e. iCR suggested proper sanitization to prevent this OS command injection attack.","fixerCustomMessageText":"In file: buildlet.go, there is a function appendSSHAuthorizedKey that is vulnerable to attacks which can execute arbitrary operating system(OS) commands. iCR suggested proper sanitization to prevent this OS command injection attack.","priority":"H","isWarning":"True","projectPath":"/workspace/source","diffLocations":["buildlet.go299815302.diff"],"scanDate":"Tue Jun 11 03:24:03 UTC 2024"},{"fixerCategoryTag":"GoFT-2","filePath":"/workspace/source/cmd/buildlet/buildlet.go","relatedSourceLocations":["/workspace/source/cmd/buildlet/buildlet.go"],"className":"null","functionName":"appendSSHAuthorizedKey","selectedNode":"exec.Command(\"icacls.exe\", authFile, \"/grant\", `NT SERVICE\\sshd:(R)`).CombinedOutput()","fixNo":"IN-H-10","fixerCategory":"Injection","fixerCustomHeading":"Prevent OS Command Injection","fixerCustomMessage":"In file: \u003cspan class='original_filename'\u003ebuildlet.go\u003c/span\u003e, there is a function \u003cspan class='function_name'\u003eappendSSHAuthorizedKey\u003c/span\u003e that is vulnerable to attacks which can \u003ca href='https://cwe.mitre.org/data/definitions/78.html' target='_blank'\u003eexecute arbitrary operating system(OS) commands\u003c/a\u003e. iCR suggested proper sanitization to prevent this OS command injection attack.","fixerCustomMessageText":"In file: buildlet.go, there is a function appendSSHAuthorizedKey that is vulnerable to attacks which can execute arbitrary operating system(OS) commands. iCR suggested proper sanitization to prevent this OS command injection attack.","priority":"H","isWarning":"True","projectPath":"/workspace/source","diffLocations":["buildlet.go3596040610.diff"],"scanDate":"Tue Jun 11 03:24:03 UTC 2024"},{"fixerCategoryTag":"GoFT-2","filePath":"/workspace/source/cmd/buildlet/buildlet.go","relatedSourceLocations":["/workspace/source/cmd/buildlet/buildlet.go"],"className":"null","functionName":"handleExec","selectedNode":"cmd.Start()","fixNo":"IN-H-17","fixerCategory":"Injection","fixerCustomHeading":"Prevent OS Command Injection","fixerCustomMessage":"In file: \u003cspan class='original_filename'\u003ebuildlet.go\u003c/span\u003e, there is a function \u003cspan class='function_name'\u003ehandleExec\u003c/span\u003e that is vulnerable to attacks which can \u003ca href='https://cwe.mitre.org/data/definitions/78.html' target='_blank'\u003eexecute arbitrary operating system(OS) commands\u003c/a\u003e. iCR suggested proper sanitization to prevent this OS command injection attack.","fixerCustomMessageText":"In file: buildlet.go, there is a function handleExec that is vulnerable to attacks which can execute arbitrary operating system(OS) commands. iCR suggested proper sanitization to prevent this OS command injection attack.","priority":"H","isWarning":"True","projectPath":"/workspace/source","diffLocations":["buildlet.go1602765577.diff"],"scanDate":"Tue Jun 11 03:24:03 UTC 2024"},{"fixerCategoryTag":"GoFT-4","filePath":"/workspace/source/cmd/buildlet/buildlet.go","relatedSourceLocations":["/workspace/source/cmd/buildlet/buildlet.go"],"className":"null","functionName":"appendSSHAuthorizedKey","selectedNode":"os.MkdirAll(sshDir, 0700)","fixNo":"IN-H-5","fixerCategory":"Injection","fixerCustomHeading":"Prevent Path Manipulation","fixerCustomMessage":"In file: \u003cspan class='original_filename'\u003ebuildlet.go\u003c/span\u003e, there is a function \u003cspan class='function_name'\u003eappendSSHAuthorizedKey\u003c/span\u003e that is vulnerable to path manipulation attacks. By \u003ca href='https://cwe.mitre.org/data/definitions/22.html' target='_blank'\u003emodifying file paths\u003c/a\u003e, an attacker can acquire sensitive information from different resources. iCR identified the location where the attacker can access unauthorized resources and suggested that proper sanitization should be done before using the path data.","fixerCustomMessageText":"In file: buildlet.go, there is a function appendSSHAuthorizedKey that is vulnerable to path manipulation attacks. By modifying file paths, an attacker can acquire sensitive information from different resources. iCR identified the location where the attacker can access unauthorized resources and suggested that proper sanitization should be done before using the path data.","priority":"H","isWarning":"True","projectPath":"/workspace/source","diffLocations":["buildlet.go1174837967.diff"],"scanDate":"Tue Jun 11 03:24:03 UTC 2024"},{"fixerCategoryTag":"GoFT-4","filePath":"/workspace/source/cmd/buildlet/buildlet.go","relatedSourceLocations":["/workspace/source/cmd/buildlet/buildlet.go"],"className":"null","functionName":"appendSSHAuthorizedKey","selectedNode":"os.Chmod(sshDir, 0700)","fixNo":"IN-H-6","fixerCategory":"Injection","fixerCustomHeading":"Prevent Path Manipulation","fixerCustomMessage":"In file: \u003cspan class='original_filename'\u003ebuildlet.go\u003c/span\u003e, there is a function \u003cspan class='function_name'\u003eappendSSHAuthorizedKey\u003c/span\u003e that is vulnerable to path manipulation attacks. By \u003ca href='https://cwe.mitre.org/data/definitions/22.html' target='_blank'\u003emodifying file paths\u003c/a\u003e, an attacker can acquire sensitive information from different resources. iCR identified the location where the attacker can access unauthorized resources and suggested that proper sanitization should be done before using the path data.","fixerCustomMessageText":"In file: buildlet.go, there is a function appendSSHAuthorizedKey that is vulnerable to path manipulation attacks. By modifying file paths, an attacker can acquire sensitive information from different resources. iCR identified the location where the attacker can access unauthorized resources and suggested that proper sanitization should be done before using the path data.","priority":"H","isWarning":"True","projectPath":"/workspace/source","diffLocations":["buildlet.go1267856878.diff"],"scanDate":"Tue Jun 11 03:24:03 UTC 2024"},{"fixerCategoryTag":"GoFT-4","filePath":"/workspace/source/cmd/buildlet/buildlet.go","relatedSourceLocations":["/workspace/source/cmd/buildlet/buildlet.go"],"className":"null","functionName":"appendSSHAuthorizedKey","selectedNode":"os.ReadFile(authFile)","fixNo":"IN-H-7","fixerCategory":"Injection","fixerCustomHeading":"Prevent Path Manipulation","fixerCustomMessage":"In file: \u003cspan class='original_filename'\u003ebuildlet.go\u003c/span\u003e, there is a function \u003cspan class='function_name'\u003eappendSSHAuthorizedKey\u003c/span\u003e that is vulnerable to path manipulation attacks. By \u003ca href='https://cwe.mitre.org/data/definitions/22.html' target='_blank'\u003emodifying file paths\u003c/a\u003e, an attacker can acquire sensitive information from different resources. iCR identified the location where the attacker can access unauthorized resources and suggested that proper sanitization should be done before using the path data.","fixerCustomMessageText":"In file: buildlet.go, there is a function appendSSHAuthorizedKey that is vulnerable to path manipulation attacks. By modifying file paths, an attacker can acquire sensitive information from different resources. iCR identified the location where the attacker can access unauthorized resources and suggested that proper sanitization should be done before using the path data.","priority":"H","isWarning":"True","projectPath":"/workspace/source","diffLocations":["buildlet.go2773657951.diff"],"scanDate":"Tue Jun 11 03:24:03 UTC 2024"},{"fixerCategoryTag":"GoFT-4","filePath":"/workspace/source/cmd/buildlet/buildlet.go","relatedSourceLocations":["/workspace/source/cmd/buildlet/buildlet.go"],"className":"null","functionName":"appendSSHAuthorizedKey","selectedNode":"os.OpenFile(authFile, os.O_APPEND|os.O_CREATE|os.O_WRONLY, 0600)","fixNo":"IN-H-8","fixerCategory":"Injection","fixerCustomHeading":"Prevent Path Manipulation","fixerCustomMessage":"In file: \u003cspan class='original_filename'\u003ebuildlet.go\u003c/span\u003e, there is a function \u003cspan class='function_name'\u003eappendSSHAuthorizedKey\u003c/span\u003e that is vulnerable to path manipulation attacks. By \u003ca href='https://cwe.mitre.org/data/definitions/22.html' target='_blank'\u003emodifying file paths\u003c/a\u003e, an attacker can acquire sensitive information from different resources. iCR identified the location where the attacker can access unauthorized resources and suggested that proper sanitization should be done before using the path data.","fixerCustomMessageText":"In file: buildlet.go, there is a function appendSSHAuthorizedKey that is vulnerable to path manipulation attacks. By modifying file paths, an attacker can acquire sensitive information from different resources. iCR identified the location where the attacker can access unauthorized resources and suggested that proper sanitization should be done before using the path data.","priority":"H","isWarning":"True","projectPath":"/workspace/source","diffLocations":["buildlet.go3992447995.diff"],"scanDate":"Tue Jun 11 03:24:03 UTC 2024"},{"fixerCategoryTag":"GoFT-4","filePath":"/workspace/source/cmd/buildlet/buildlet.go","relatedSourceLocations":["/workspace/source/cmd/buildlet/buildlet.go"],"className":"null","functionName":"handleGetTGZ","selectedNode":"filepath.Walk(base, func(path string, fi os.FileInfo, err error) error {\n\tif err != nil {\n\t\treturn err\n\t}\n\trel := strings.TrimPrefix(filepath.ToSlash(strings.TrimPrefix(path, base)), \"/\")\n\tvar linkName string\n\tif fi.Mode()\u0026os.ModeSymlink != 0 {\n\t\tlinkName, err = os.Readlink(path)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t}\n\tth, err := tar.FileInfoHeader(fi, linkName)\n\tif err != nil {\n\t\treturn err\n\t}\n\tth.Name = rel\n\tif fi.IsDir() \u0026\u0026 !strings.HasSuffix(th.Name, \"/\") {\n\t\tth.Name += \"/\"\n\t}\n\tif th.Name == \"/\" {\n\t\treturn nil\n\t}\n\tif err := tw.WriteHeader(th); err != nil {\n\t\treturn err\n\t}\n\tif fi.Mode().IsRegular() {\n\t\tf, err := os.Open(path)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tdefer f.Close()\n\t\tif _, err := io.Copy(tw, f); err != nil {\n\t\t\treturn err\n\t\t}\n\t}\n\treturn nil\n})","fixNo":"IN-H-11","fixerCategory":"Injection","fixerCustomHeading":"Prevent Path Manipulation","fixerCustomMessage":"In file: \u003cspan class='original_filename'\u003ebuildlet.go\u003c/span\u003e, there is a function \u003cspan class='function_name'\u003ehandleGetTGZ\u003c/span\u003e that is vulnerable to path manipulation attacks. By \u003ca href='https://cwe.mitre.org/data/definitions/22.html' target='_blank'\u003emodifying file paths\u003c/a\u003e, an attacker can acquire sensitive information from different resources. iCR identified the location where the attacker can access unauthorized resources and suggested that proper sanitization should be done before using the path data.","fixerCustomMessageText":"In file: buildlet.go, there is a function handleGetTGZ that is vulnerable to path manipulation attacks. By modifying file paths, an attacker can acquire sensitive information from different resources. iCR identified the location where the attacker can access unauthorized resources and suggested that proper sanitization should be done before using the path data.","priority":"H","isWarning":"True","projectPath":"/workspace/source","diffLocations":["buildlet.go1462433925.diff"],"scanDate":"Tue Jun 11 03:24:03 UTC 2024"},{"fixerCategoryTag":"GoFT-5","filePath":"/workspace/source/cmd/buildlet/buildlet.go","relatedSourceLocations":["/workspace/source/cmd/buildlet/buildlet.go"],"className":"null","functionName":"handleWriteTGZ","selectedNode":"http.Get(urlStr)","fixNo":"IN-H-12","fixerCategory":"Injection","fixerCustomHeading":"Prevent Server-Side Request Forgery","fixerCustomMessage":"In file: \u003cspan class='original_filename'\u003ebuildlet.go\u003c/span\u003e, there is a function \u003cspan class='function_name'\u003ehandleWriteTGZ\u003c/span\u003e that fetches a remote resource based on a URL that may come from user-provided, untrusted data. This may \u003ca href='https://cwe.mitre.org/data/definitions/918.html' target='_blank'\u003eallow an attacker to send a crafted request to an unexpected destination\u003c/a\u003e. iCR suggested proper sanitization before user-provided data can be used to fetch remote resources. A popular option for sanitization for this case is the \u003ca href='https://github.com/doyensec/safeurl' target='_blank'\u003esafeurl library\u003c/a\u003e.","fixerCustomMessageText":"In file: buildlet.go, there is a function handleWriteTGZ that fetches a remote resource based on a URL that may come from user-provided, untrusted data. This may allow an attacker to send a crafted request to an unexpected destination. iCR suggested proper sanitization before user-provided data can be used to fetch remote resources. A popular option for sanitization for this case is the safeurl library.","priority":"H","isWarning":"True","projectPath":"/workspace/source","diffLocations":["buildlet.go204841188.diff"],"scanDate":"Tue Jun 11 03:24:03 UTC 2024"},{"fixerCategoryTag":"GoFT-5","filePath":"/workspace/source/gerrit/auth.go","relatedSourceLocations":["/workspace/source/gerrit/auth.go"],"className":"null","functionName":"setAuth","selectedNode":"http.Get(r.URL.String())","fixNo":"IN-H-24","fixerCategory":"Injection","fixerCustomHeading":"Prevent Server-Side Request Forgery","fixerCustomMessage":"In file: \u003cspan class='original_filename'\u003eauth.go\u003c/span\u003e, there is a function \u003cspan class='function_name'\u003esetAuth\u003c/span\u003e that fetches a remote resource based on a URL that may come from user-provided, untrusted data. This may \u003ca href='https://cwe.mitre.org/data/definitions/918.html' target='_blank'\u003eallow an attacker to send a crafted request to an unexpected destination\u003c/a\u003e. iCR suggested proper sanitization before user-provided data can be used to fetch remote resources. A popular option for sanitization for this case is the \u003ca href='https://github.com/doyensec/safeurl' target='_blank'\u003esafeurl library\u003c/a\u003e.","fixerCustomMessageText":"In file: auth.go, there is a function setAuth that fetches a remote resource based on a URL that may come from user-provided, untrusted data. This may allow an attacker to send a crafted request to an unexpected destination. iCR suggested proper sanitization before user-provided data can be used to fetch remote resources. A popular option for sanitization for this case is the safeurl library.","priority":"H","isWarning":"True","projectPath":"/workspace/source","diffLocations":["auth.go2778691664.diff"],"scanDate":"Tue Jun 11 03:24:03 UTC 2024"},{"fixerCategoryTag":"GoFT-6","filePath":"/workspace/source/perf/app/dashboard.go","relatedSourceLocations":["/workspace/source/perf/app/dashboard.go"],"className":"null","functionName":"influxQuery","selectedNode":"log.Printf(\"InfluxDB query: %s\", query)","fixNo":"IN-H-22","fixerCategory":"Injection","fixerCustomHeading":"Prevent Log Injection","fixerCustomMessage":"In file: \u003cspan class='original_filename'\u003edashboard.go\u003c/span\u003e, there is a function \u003cspan class='function_name'\u003einfluxQuery\u003c/span\u003e that stores user-provided data into logs without validating the data. This allows an attacker to \u003ca href='https://cwe.mitre.org/data/definitions/117.html' target='_blank'\u003ecorrupt the log file structure\u003c/a\u003e. iCR suggested proper sanitization before user-provided data can be added to logs.","fixerCustomMessageText":"In file: dashboard.go, there is a function influxQuery that stores user-provided data into logs without validating the data. This allows an attacker to corrupt the log file structure. iCR suggested proper sanitization before user-provided data can be added to logs.","priority":"H","isWarning":"True","projectPath":"/workspace/source","diffLocations":["dashboard.go336865590.diff"],"scanDate":"Tue Jun 11 03:24:03 UTC 2024"},{"fixerCategoryTag":"GoFT-6","filePath":"/workspace/source/internal/coordinator/pool/reverse.go","relatedSourceLocations":["/workspace/source/internal/coordinator/pool/reverse.go"],"className":"null","functionName":"HandleReverse","selectedNode":"log.Printf(\"Registering reverse buildlet %q (%s) for host type %v; buildletVersion=%v\",\n\thostname, r.RemoteAddr, hostType, buildletVersion)","fixNo":"IN-H-28","fixerCategory":"Injection","fixerCustomHeading":"Prevent Log Injection","fixerCustomMessage":"In file: \u003cspan class='original_filename'\u003ereverse.go\u003c/span\u003e, there is a function \u003cspan class='function_name'\u003eHandleReverse\u003c/span\u003e that stores user-provided data into logs without validating the data. This allows an attacker to \u003ca href='https://cwe.mitre.org/data/definitions/117.html' target='_blank'\u003ecorrupt the log file structure\u003c/a\u003e. iCR suggested proper sanitization before user-provided data can be added to logs.","fixerCustomMessageText":"In file: reverse.go, there is a function HandleReverse that stores user-provided data into logs without validating the data. This allows an attacker to corrupt the log file structure. iCR suggested proper sanitization before user-provided data can be added to logs.","priority":"H","isWarning":"True","projectPath":"/workspace/source","diffLocations":["reverse.go2593975192.diff"],"scanDate":"Tue Jun 11 03:24:05 UTC 2024"},{"fixerCategoryTag":"GoFT-6","filePath":"/workspace/source/cmd/buildlet/buildlet.go","relatedSourceLocations":["/workspace/source/cmd/buildlet/buildlet.go"],"className":"null","functionName":"handleWriteTGZ","selectedNode":"log.Printf(\"writetgz: failed to fetch tgz URL %s: %v\", urlStr, err)","fixNo":"IN-H-13","fixerCategory":"Injection","fixerCustomHeading":"Prevent Log Injection","fixerCustomMessage":"In file: \u003cspan class='original_filename'\u003ebuildlet.go\u003c/span\u003e, there is a function \u003cspan class='function_name'\u003ehandleWriteTGZ\u003c/span\u003e that stores user-provided data into logs without validating the data. This allows an attacker to \u003ca href='https://cwe.mitre.org/data/definitions/117.html' target='_blank'\u003ecorrupt the log file structure\u003c/a\u003e. iCR suggested proper sanitization before user-provided data can be added to logs.","fixerCustomMessageText":"In file: buildlet.go, there is a function handleWriteTGZ that stores user-provided data into logs without validating the data. This allows an attacker to corrupt the log file structure. iCR suggested proper sanitization before user-provided data can be added to logs.","priority":"H","isWarning":"True","projectPath":"/workspace/source","diffLocations":["buildlet.go1632650068.diff"],"scanDate":"Tue Jun 11 03:24:03 UTC 2024"},{"fixerCategoryTag":"GoFT-6","filePath":"/workspace/source/perf/app/dashboard.go","relatedSourceLocations":["/workspace/source/perf/app/dashboard.go"],"className":"null","functionName":"dashboardData","selectedNode":"log.Printf(\"Benchmark not found: %q\", benchmark)","fixNo":"IN-H-23","fixerCategory":"Injection","fixerCustomHeading":"Prevent Log Injection","fixerCustomMessage":"In file: \u003cspan class='original_filename'\u003edashboard.go\u003c/span\u003e, there is a function \u003cspan class='function_name'\u003edashboardData\u003c/span\u003e that stores user-provided data into logs without validating the data. This allows an attacker to \u003ca href='https://cwe.mitre.org/data/definitions/117.html' target='_blank'\u003ecorrupt the log file structure\u003c/a\u003e. iCR suggested proper sanitization before user-provided data can be added to logs.","fixerCustomMessageText":"In file: dashboard.go, there is a function dashboardData that stores user-provided data into logs without validating the data. This allows an attacker to corrupt the log file structure. iCR suggested proper sanitization before user-provided data can be added to logs.","priority":"H","isWarning":"True","projectPath":"/workspace/source","diffLocations":["dashboard.go716065533.diff"],"scanDate":"Tue Jun 11 03:24:03 UTC 2024"},{"fixerCategoryTag":"GoFT-6","filePath":"/workspace/source/cmd/buildlet/buildlet.go","relatedSourceLocations":["/workspace/source/cmd/buildlet/buildlet.go"],"className":"null","functionName":"handleExec","selectedNode":"log.Printf(\"[%p] Run = %s, after %v\", cmd, state, time.Since(t0))","fixNo":"IN-H-18","fixerCategory":"Injection","fixerCustomHeading":"Prevent Log Injection","fixerCustomMessage":"In file: \u003cspan class='original_filename'\u003ebuildlet.go\u003c/span\u003e, there is a function \u003cspan class='function_name'\u003ehandleExec\u003c/span\u003e that stores user-provided data into logs without validating the data. This allows an attacker to \u003ca href='https://cwe.mitre.org/data/definitions/117.html' target='_blank'\u003ecorrupt the log file structure\u003c/a\u003e. iCR suggested proper sanitization before user-provided data can be added to logs.","fixerCustomMessageText":"In file: buildlet.go, there is a function handleExec that stores user-provided data into logs without validating the data. This allows an attacker to corrupt the log file structure. iCR suggested proper sanitization before user-provided data can be added to logs.","priority":"H","isWarning":"True","projectPath":"/workspace/source","diffLocations":["buildlet.go3614715529.diff"],"scanDate":"Tue Jun 11 03:24:03 UTC 2024"},{"fixerCategoryTag":"GoFT-6","filePath":"/workspace/source/internal/rendezvous/fake_rendezvous.go","relatedSourceLocations":["/workspace/source/internal/rendezvous/fake_rendezvous.go"],"className":"null","functionName":"HandleReverse","selectedNode":"log.Printf(\"rendezvous: Unable to validate authentication token id=%s\", id)","fixNo":"IN-H-19","fixerCategory":"Injection","fixerCustomHeading":"Prevent Log Injection","fixerCustomMessage":"In file: \u003cspan class='original_filename'\u003efake_rendezvous.go\u003c/span\u003e, there is a function \u003cspan class='function_name'\u003eHandleReverse\u003c/span\u003e that stores user-provided data into logs without validating the data. This allows an attacker to \u003ca href='https://cwe.mitre.org/data/definitions/117.html' target='_blank'\u003ecorrupt the log file structure\u003c/a\u003e. iCR suggested proper sanitization before user-provided data can be added to logs.","fixerCustomMessageText":"In file: fake_rendezvous.go, there is a function HandleReverse that stores user-provided data into logs without validating the data. This allows an attacker to corrupt the log file structure. iCR suggested proper sanitization before user-provided data can be added to logs.","priority":"H","isWarning":"True","projectPath":"/workspace/source","diffLocations":["fake_rendezvous.go2022371258.diff"],"scanDate":"Tue Jun 11 03:24:03 UTC 2024"},{"fixerCategoryTag":"GoFT-6","filePath":"/workspace/source/perf/app/dashboard.go","relatedSourceLocations":["/workspace/source/perf/app/dashboard.go"],"className":"null","functionName":"dashboardData","selectedNode":"log.Printf(\"Error parsing days %q: %v\", dayParam, err)","fixNo":"IN-H-20","fixerCategory":"Injection","fixerCustomHeading":"Prevent Log Injection","fixerCustomMessage":"In file: \u003cspan class='original_filename'\u003edashboard.go\u003c/span\u003e, there is a function \u003cspan class='function_name'\u003edashboardData\u003c/span\u003e that stores user-provided data into logs without validating the data. This allows an attacker to \u003ca href='https://cwe.mitre.org/data/definitions/117.html' target='_blank'\u003ecorrupt the log file structure\u003c/a\u003e. iCR suggested proper sanitization before user-provided data can be added to logs.","fixerCustomMessageText":"In file: dashboard.go, there is a function dashboardData that stores user-provided data into logs without validating the data. This allows an attacker to corrupt the log file structure. iCR suggested proper sanitization before user-provided data can be added to logs.","priority":"H","isWarning":"True","projectPath":"/workspace/source","diffLocations":["dashboard.go237860593.diff"],"scanDate":"Tue Jun 11 03:24:03 UTC 2024"},{"fixerCategoryTag":"GoFT-6","filePath":"/workspace/source/cmd/buildlet/buildlet.go","relatedSourceLocations":["/workspace/source/cmd/buildlet/buildlet.go"],"className":"null","functionName":"handleWriteTGZ","selectedNode":"log.Printf(\"writetgz: untarring %s (got headers in %v) into %s\", urlStr, time.Since(t0), baseDir)","fixNo":"IN-H-15","fixerCategory":"Injection","fixerCustomHeading":"Prevent Log Injection","fixerCustomMessage":"In file: \u003cspan class='original_filename'\u003ebuildlet.go\u003c/span\u003e, there is a function \u003cspan class='function_name'\u003ehandleWriteTGZ\u003c/span\u003e that stores user-provided data into logs without validating the data. This allows an attacker to \u003ca href='https://cwe.mitre.org/data/definitions/117.html' target='_blank'\u003ecorrupt the log file structure\u003c/a\u003e. iCR suggested proper sanitization before user-provided data can be added to logs.","fixerCustomMessageText":"In file: buildlet.go, there is a function handleWriteTGZ that stores user-provided data into logs without validating the data. This allows an attacker to corrupt the log file structure. iCR suggested proper sanitization before user-provided data can be added to logs.","priority":"H","isWarning":"True","projectPath":"/workspace/source","diffLocations":["buildlet.go983410762.diff"],"scanDate":"Tue Jun 11 03:24:03 UTC 2024"},{"fixerCategoryTag":"GoFT-6","filePath":"/workspace/source/internal/coordinator/pool/reverse.go","relatedSourceLocations":["/workspace/source/internal/coordinator/pool/reverse.go"],"className":"null","functionName":"HandleReverse","selectedNode":"log.Printf(\"Buildlet %s/%s: %+v for %s\", hostname, r.RemoteAddr, status, hostType)","fixNo":"IN-H-30","fixerCategory":"Injection","fixerCustomHeading":"Prevent Log Injection","fixerCustomMessage":"In file: \u003cspan class='original_filename'\u003ereverse.go\u003c/span\u003e, there is a function \u003cspan class='function_name'\u003eHandleReverse\u003c/span\u003e that stores user-provided data into logs without validating the data. This allows an attacker to \u003ca href='https://cwe.mitre.org/data/definitions/117.html' target='_blank'\u003ecorrupt the log file structure\u003c/a\u003e. iCR suggested proper sanitization before user-provided data can be added to logs.","fixerCustomMessageText":"In file: reverse.go, there is a function HandleReverse that stores user-provided data into logs without validating the data. This allows an attacker to corrupt the log file structure. iCR suggested proper sanitization before user-provided data can be added to logs.","priority":"H","isWarning":"True","projectPath":"/workspace/source","diffLocations":["reverse.go2633458586.diff"],"scanDate":"Tue Jun 11 03:24:05 UTC 2024"},{"fixerCategoryTag":"GoFT-6","filePath":"/workspace/source/cmd/buildlet/buildlet.go","relatedSourceLocations":["/workspace/source/cmd/buildlet/buildlet.go"],"className":"null","functionName":"handleWriteTGZ","selectedNode":"log.Printf(\"writetgz: failed to fetch tgz URL %s: status=%v\", urlStr, res.Status)","fixNo":"IN-H-14","fixerCategory":"Injection","fixerCustomHeading":"Prevent Log Injection","fixerCustomMessage":"In file: \u003cspan class='original_filename'\u003ebuildlet.go\u003c/span\u003e, there is a function \u003cspan class='function_name'\u003ehandleWriteTGZ\u003c/span\u003e that stores user-provided data into logs without validating the data. This allows an attacker to \u003ca href='https://cwe.mitre.org/data/definitions/117.html' target='_blank'\u003ecorrupt the log file structure\u003c/a\u003e. iCR suggested proper sanitization before user-provided data can be added to logs.","fixerCustomMessageText":"In file: buildlet.go, there is a function handleWriteTGZ that stores user-provided data into logs without validating the data. This allows an attacker to corrupt the log file structure. iCR suggested proper sanitization before user-provided data can be added to logs.","priority":"H","isWarning":"True","projectPath":"/workspace/source","diffLocations":["buildlet.go363852307.diff"],"scanDate":"Tue Jun 11 03:24:03 UTC 2024"},{"fixerCategoryTag":"GoFT-6","filePath":"/workspace/source/buildlet/buildletclient.go","relatedSourceLocations":["/workspace/source/internal/coordinator/pool/reverse.go","/workspace/source/buildlet/buildletclient.go"],"className":"null","functionName":"doHeaderTimeout","selectedNode":"log.Printf(\"%s: timeout after %v waiting for headers for %v\", c.Name(), max, req.URL.Path)","fixNo":"IN-H-25","fixerCategory":"Injection","fixerCustomHeading":"Prevent Log Injection","fixerCustomMessage":"In file: \u003cspan class='original_filename'\u003ebuildletclient.go\u003c/span\u003e, there is a function \u003cspan class='function_name'\u003edoHeaderTimeout\u003c/span\u003e that stores user-provided data into logs without validating the data. This allows an attacker to \u003ca href='https://cwe.mitre.org/data/definitions/117.html' target='_blank'\u003ecorrupt the log file structure\u003c/a\u003e. iCR suggested proper sanitization before user-provided data can be added to logs.","fixerCustomMessageText":"In file: buildletclient.go, there is a function doHeaderTimeout that stores user-provided data into logs without validating the data. This allows an attacker to corrupt the log file structure. iCR suggested proper sanitization before user-provided data can be added to logs.","priority":"H","isWarning":"True","projectPath":"/workspace/source","diffLocations":["buildletclient.go3736655550.diff"],"scanDate":"Tue Jun 11 03:24:04 UTC 2024"},{"fixerCategoryTag":"GoFT-6","filePath":"/workspace/source/buildlet/buildletclient.go","relatedSourceLocations":["/workspace/source/internal/coordinator/pool/reverse.go","/workspace/source/buildlet/buildletclient.go"],"className":"null","functionName":"doHeaderTimeout","selectedNode":"log.Printf(\"%s: peer dead with %v, waiting for headers for %v\", c.Name(), c.deadErr, req.URL.Path)","fixNo":"IN-H-26","fixerCategory":"Injection","fixerCustomHeading":"Prevent Log Injection","fixerCustomMessage":"In file: \u003cspan class='original_filename'\u003ebuildletclient.go\u003c/span\u003e, there is a function \u003cspan class='function_name'\u003edoHeaderTimeout\u003c/span\u003e that stores user-provided data into logs without validating the data. This allows an attacker to \u003ca href='https://cwe.mitre.org/data/definitions/117.html' target='_blank'\u003ecorrupt the log file structure\u003c/a\u003e. iCR suggested proper sanitization before user-provided data can be added to logs.","fixerCustomMessageText":"In file: buildletclient.go, there is a function doHeaderTimeout that stores user-provided data into logs without validating the data. This allows an attacker to corrupt the log file structure. iCR suggested proper sanitization before user-provided data can be added to logs.","priority":"H","isWarning":"True","projectPath":"/workspace/source","diffLocations":["buildletclient.go947870511.diff"],"scanDate":"Tue Jun 11 03:24:04 UTC 2024"},{"fixerCategoryTag":"GoFT-6","filePath":"/workspace/source/internal/rendezvous/rendezvous.go","relatedSourceLocations":["/workspace/source/internal/rendezvous/rendezvous.go"],"className":"null","functionName":"connToClient","selectedNode":"log.Printf(\"gomote: error writing upgrade response to reverse buildlet %s (%s) at %s: %v\", hostname, hostType, conn.RemoteAddr(), err)","fixNo":"IN-H-4","fixerCategory":"Injection","fixerCustomHeading":"Prevent Log Injection","fixerCustomMessage":"In file: \u003cspan class='original_filename'\u003erendezvous.go\u003c/span\u003e, there is a function \u003cspan class='function_name'\u003econnToClient\u003c/span\u003e that stores user-provided data into logs without validating the data. This allows an attacker to \u003ca href='https://cwe.mitre.org/data/definitions/117.html' target='_blank'\u003ecorrupt the log file structure\u003c/a\u003e. iCR suggested proper sanitization before user-provided data can be added to logs.","fixerCustomMessageText":"In file: rendezvous.go, there is a function connToClient that stores user-provided data into logs without validating the data. This allows an attacker to corrupt the log file structure. iCR suggested proper sanitization before user-provided data can be added to logs.","priority":"H","isWarning":"True","projectPath":"/workspace/source","diffLocations":["rendezvous.go4154099848.diff"],"scanDate":"Tue Jun 11 03:24:02 UTC 2024"},{"fixerCategoryTag":"GoFT-6","filePath":"/workspace/source/internal/rendezvous/rendezvous.go","relatedSourceLocations":["/workspace/source/internal/rendezvous/rendezvous.go"],"className":"null","functionName":"connToClient","selectedNode":"log.Printf(\"Buildlet %s/%s: %+v for %s\", hostname, conn.RemoteAddr(), status, hostType)","fixNo":"IN-H-3","fixerCategory":"Injection","fixerCustomHeading":"Prevent Log Injection","fixerCustomMessage":"In file: \u003cspan class='original_filename'\u003erendezvous.go\u003c/span\u003e, there is a function \u003cspan class='function_name'\u003econnToClient\u003c/span\u003e that stores user-provided data into logs without validating the data. This allows an attacker to \u003ca href='https://cwe.mitre.org/data/definitions/117.html' target='_blank'\u003ecorrupt the log file structure\u003c/a\u003e. iCR suggested proper sanitization before user-provided data can be added to logs.","fixerCustomMessageText":"In file: rendezvous.go, there is a function connToClient that stores user-provided data into logs without validating the data. This allows an attacker to corrupt the log file structure. iCR suggested proper sanitization before user-provided data can be added to logs.","priority":"H","isWarning":"True","projectPath":"/workspace/source","diffLocations":["rendezvous.go221871840.diff"],"scanDate":"Tue Jun 11 03:24:02 UTC 2024"},{"fixerCategoryTag":"GoFT-6","filePath":"/workspace/source/internal/rendezvous/rendezvous.go","relatedSourceLocations":["/workspace/source/internal/rendezvous/rendezvous.go"],"className":"null","functionName":"connToClient","selectedNode":"log.Printf(\"Reverse connection %s/%s for %s did not answer status after %v: %v\",\n\thostname, conn.RemoteAddr(), hostType, time.Since(tstatus), err)","fixNo":"IN-H-2","fixerCategory":"Injection","fixerCustomHeading":"Prevent Log Injection","fixerCustomMessage":"In file: \u003cspan class='original_filename'\u003erendezvous.go\u003c/span\u003e, there is a function \u003cspan class='function_name'\u003econnToClient\u003c/span\u003e that stores user-provided data into logs without validating the data. This allows an attacker to \u003ca href='https://cwe.mitre.org/data/definitions/117.html' target='_blank'\u003ecorrupt the log file structure\u003c/a\u003e. iCR suggested proper sanitization before user-provided data can be added to logs.","fixerCustomMessageText":"In file: rendezvous.go, there is a function connToClient that stores user-provided data into logs without validating the data. This allows an attacker to corrupt the log file structure. iCR suggested proper sanitization before user-provided data can be added to logs.","priority":"H","isWarning":"True","projectPath":"/workspace/source","diffLocations":["rendezvous.go375726945.diff"],"scanDate":"Tue Jun 11 03:24:02 UTC 2024"},{"fixerCategoryTag":"GoFT-6","filePath":"/workspace/source/internal/rendezvous/rendezvous.go","relatedSourceLocations":["/workspace/source/internal/rendezvous/rendezvous.go"],"className":"null","functionName":"HandleReverse","selectedNode":"log.Printf(\"rendezvous: Unable to validate authentication token id=%s\", id)","fixNo":"IN-H-1","fixerCategory":"Injection","fixerCustomHeading":"Prevent Log Injection","fixerCustomMessage":"In file: \u003cspan class='original_filename'\u003erendezvous.go\u003c/span\u003e, there is a function \u003cspan class='function_name'\u003eHandleReverse\u003c/span\u003e that stores user-provided data into logs without validating the data. This allows an attacker to \u003ca href='https://cwe.mitre.org/data/definitions/117.html' target='_blank'\u003ecorrupt the log file structure\u003c/a\u003e. iCR suggested proper sanitization before user-provided data can be added to logs.","fixerCustomMessageText":"In file: rendezvous.go, there is a function HandleReverse that stores user-provided data into logs without validating the data. This allows an attacker to corrupt the log file structure. iCR suggested proper sanitization before user-provided data can be added to logs.","priority":"H","isWarning":"True","projectPath":"/workspace/source","diffLocations":["rendezvous.go423790709.diff"],"scanDate":"Tue Jun 11 03:24:02 UTC 2024"},{"fixerCategoryTag":"GoFT-6","filePath":"/workspace/source/internal/coordinator/pool/reverse.go","relatedSourceLocations":["/workspace/source/internal/coordinator/pool/reverse.go"],"className":"null","functionName":"HandleReverse","selectedNode":"log.Printf(\"error writing upgrade response to reverse buildlet %s (%s) at %s: %v\", hostname, hostType, r.RemoteAddr, err)","fixNo":"IN-H-27","fixerCategory":"Injection","fixerCustomHeading":"Prevent Log Injection","fixerCustomMessage":"In file: \u003cspan class='original_filename'\u003ereverse.go\u003c/span\u003e, there is a function \u003cspan class='function_name'\u003eHandleReverse\u003c/span\u003e that stores user-provided data into logs without validating the data. This allows an attacker to \u003ca href='https://cwe.mitre.org/data/definitions/117.html' target='_blank'\u003ecorrupt the log file structure\u003c/a\u003e. iCR suggested proper sanitization before user-provided data can be added to logs.","fixerCustomMessageText":"In file: reverse.go, there is a function HandleReverse that stores user-provided data into logs without validating the data. This allows an attacker to corrupt the log file structure. iCR suggested proper sanitization before user-provided data can be added to logs.","priority":"H","isWarning":"True","projectPath":"/workspace/source","diffLocations":["reverse.go3068653100.diff"],"scanDate":"Tue Jun 11 03:24:05 UTC 2024"},{"fixerCategoryTag":"GoFT-6","filePath":"/workspace/source/cmd/buildlet/buildlet.go","relatedSourceLocations":["/workspace/source/cmd/buildlet/buildlet.go"],"className":"null","functionName":"handleExec","selectedNode":"log.Printf(\"[%p] Running %s with args %q and env %q in dir %s\",\n\tcmd, cmd.Path, cmd.Args, cmd.Env, cmd.Dir)","fixNo":"IN-H-16","fixerCategory":"Injection","fixerCustomHeading":"Prevent Log Injection","fixerCustomMessage":"In file: \u003cspan class='original_filename'\u003ebuildlet.go\u003c/span\u003e, there is a function \u003cspan class='function_name'\u003ehandleExec\u003c/span\u003e that stores user-provided data into logs without validating the data. This allows an attacker to \u003ca href='https://cwe.mitre.org/data/definitions/117.html' target='_blank'\u003ecorrupt the log file structure\u003c/a\u003e. iCR suggested proper sanitization before user-provided data can be added to logs.","fixerCustomMessageText":"In file: buildlet.go, there is a function handleExec that stores user-provided data into logs without validating the data. This allows an attacker to corrupt the log file structure. iCR suggested proper sanitization before user-provided data can be added to logs.","priority":"H","isWarning":"True","projectPath":"/workspace/source","diffLocations":["buildlet.go1505892318.diff"],"scanDate":"Tue Jun 11 03:24:03 UTC 2024"},{"fixerCategoryTag":"GoFT-6","filePath":"/workspace/source/internal/coordinator/pool/reverse.go","relatedSourceLocations":["/workspace/source/internal/coordinator/pool/reverse.go"],"className":"null","functionName":"HandleReverse","selectedNode":"log.Printf(\"Reverse connection %s/%s for %s did not answer status after %v: %v\",\n\thostname, r.RemoteAddr, hostType, time.Since(tstatus), err)","fixNo":"IN-H-29","fixerCategory":"Injection","fixerCustomHeading":"Prevent Log Injection","fixerCustomMessage":"In file: \u003cspan class='original_filename'\u003ereverse.go\u003c/span\u003e, there is a function \u003cspan class='function_name'\u003eHandleReverse\u003c/span\u003e that stores user-provided data into logs without validating the data. This allows an attacker to \u003ca href='https://cwe.mitre.org/data/definitions/117.html' target='_blank'\u003ecorrupt the log file structure\u003c/a\u003e. iCR suggested proper sanitization before user-provided data can be added to logs.","fixerCustomMessageText":"In file: reverse.go, there is a function HandleReverse that stores user-provided data into logs without validating the data. This allows an attacker to corrupt the log file structure. iCR suggested proper sanitization before user-provided data can be added to logs.","priority":"H","isWarning":"True","projectPath":"/workspace/source","diffLocations":["reverse.go1066707226.diff"],"scanDate":"Tue Jun 11 03:24:05 UTC 2024"},{"fixerCategoryTag":"GoFT-6","filePath":"/workspace/source/perf/app/dashboard.go","relatedSourceLocations":["/workspace/source/perf/app/dashboard.go"],"className":"null","functionName":"dashboardData","selectedNode":"log.Printf(\"Error parsing end %q: %v\", endParam, err)","fixNo":"IN-H-21","fixerCategory":"Injection","fixerCustomHeading":"Prevent Log Injection","fixerCustomMessage":"In file: \u003cspan class='original_filename'\u003edashboard.go\u003c/span\u003e, there is a function \u003cspan class='function_name'\u003edashboardData\u003c/span\u003e that stores user-provided data into logs without validating the data. This allows an attacker to \u003ca href='https://cwe.mitre.org/data/definitions/117.html' target='_blank'\u003ecorrupt the log file structure\u003c/a\u003e. iCR suggested proper sanitization before user-provided data can be added to logs.","fixerCustomMessageText":"In file: dashboard.go, there is a function dashboardData that stores user-provided data into logs without validating the data. This allows an attacker to corrupt the log file structure. iCR suggested proper sanitization before user-provided data can be added to logs.","priority":"H","isWarning":"True","projectPath":"/workspace/source","diffLocations":["dashboard.go1855044491.diff"],"scanDate":"Tue Jun 11 03:24:03 UTC 2024"},{"fixerCategoryTag":"GoFT-11","filePath":"/workspace/source/gerrit/auth.go","relatedSourceLocations":["/workspace/source/gerrit/auth.go"],"className":"null","functionName":"setDigestAuth","selectedNode":"r.Header.Add(\"Authorization\", authStr)","fixNo":"BA-M-1","fixerCategory":"Broken Authentication","fixerCustomHeading":"Fix Hard-coded Key","fixerCustomMessage":"In file: \u003cspan class='original_filename'\u003eauth.go\u003c/span\u003e, there is a function call that uses a credential. The credential is hard-coded in the source code. iCR identified the usage point and suggested that the credential should not be hard-coded. For more information, read \u003ca href='https://cwe.mitre.org/data/definitions/798.html' target='_blank'\u003eCWE-798\u003c/a\u003e.","fixerCustomMessageText":"In file: auth.go, there is a function call that uses a credential. The credential is hard-coded in the source code. iCR identified the usage point and suggested that the credential should not be hard-coded. For more information, read CWE-798.","priority":"M","isWarning":"True","projectPath":"/workspace/source","diffLocations":["auth.go2845510636.diff"],"scanDate":"Tue Jun 11 03:24:03 UTC 2024"},{"fixerCategoryTag":"GoFT-12","filePath":"/workspace/source/perfdata/db/db.go","relatedSourceLocations":["/workspace/source/perfdata/db/dbtest/dbtest.go","/workspace/source/perfdata/db/db.go","/workspace/source/perfdata/db/dbtest/nocloud.go"],"className":"null","functionName":"OpenSQL","selectedNode":"sql.Open(driverName, dataSourceName)","fixNo":"BA-M-2","fixerCategory":"Broken Authentication","fixerCustomHeading":"Fix Hard-coded Password","fixerCustomMessage":"In file: \u003cspan class='original_filename'\u003edb.go\u003c/span\u003e, there is a function call that uses a password. The password is hard-coded in the source code. iCR identified the usage point and suggested that the credential should not be hard-coded. For more information, read \u003ca href='https://cwe.mitre.org/data/definitions/259.html' target='_blank'\u003eCWE-259\u003c/a\u003e.","fixerCustomMessageText":"In file: db.go, there is a function call that uses a password. The password is hard-coded in the source code. iCR identified the usage point and suggested that the credential should not be hard-coded. For more information, read CWE-259.","priority":"M","isWarning":"True","projectPath":"/workspace/source","diffLocations":["db.go151474263.diff"],"scanDate":"Tue Jun 11 03:24:04 UTC 2024"}]